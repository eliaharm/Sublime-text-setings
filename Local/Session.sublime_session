{
	"folder_history":
	[
		"/X/Documents/Elia/sql/Desktop"
	],
	"last_version": 3176,
	"last_window_id": 77,
	"log_indexing": false,
	"settings":
	{
		"new_window_height": 676.8,
		"new_window_settings":
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"the",
						"then"
					],
					[
						"varchar",
						"varchar2"
					],
					[
						"cust",
						"cust_id"
					]
				]
			},
			"build_system_choices":
			[
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 490.0,
				"last_filter": "Package Control: ",
				"selected_items":
				[
					[
						"Package Control: ",
						"Package Control: Install Package"
					],
					[
						"git",
						"Git: Quick Commit (current file)"
					],
					[
						"Package Control",
						"Package Control: Install Package"
					]
				],
				"width": 741.0
			},
			"console":
			{
				"height": 162.0,
				"history":
				[
					"git_quick_commit",
					"git commit",
					"commit",
					"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
					"Package Control;",
					"Package Control",
					"Package Control: Install Package"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"file_history":
			[
				"/X/Documents/Mohamed/Tuition Fees/DV_TUITIONS_FEES_ACNTS.sql",
				"/X/Documents/Elia/sql/Desktop/Contract printing/New Text Document.txt",
				"/X/Documents/Elia/sql/Desktop/Contract printing/CARD KFS APR from table.sql",
				"/X/Documents/Elia/sql/Desktop/Marie Car dealers commitions.sql",
				"/X/Documents/Elia/sql/Desktop/ebanking CSC cards/CSC defs.txt",
				"/X/Documents/Elia/sql/Desktop/Areeba automation/areeba automation.sql",
				"/C/javaApp/webBanking3/sql/CSCgetCards.sql",
				"/C/javaApp/webBanking3/sql/CSCgetCardDetails.sql",
				"/C/javaApp/webBanking3/webBanking3.log",
				"/C/Users/elia_harmouche/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.Outlook/X5J9Q58V/SelectCust.txt",
				"/C/javaApp/webBanking3/sql/SelectAcc.sql",
				"/C/javaApp/glassfish501b/glassfish/domains/domain1/logs/server.log",
				"/X/Documents/Elia/sql/Desktop/Areeba automation/CREDIT_BANK_USD.TXT",
				"/C/Program Files (x86)/Privoxy/config.txt",
				"/X/Documents/Elia/sql/Desktop/Profitability/Prof Corp SME.sql",
				"/C/Users/elia_harmouche/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.Outlook/X5J9Q58V/TO_SOLVE.txt",
				"/X/Documents/Elia/sql/Desktop/Factoring/Factoring table.sql",
				"/X/Documents/Elia/sql/Retail Loans interface/Retail Loan Applications.sql",
				"/X/Documents/Elia/sql/Desktop/Georges Moubarak account officers.sql",
				"/X/Documents/Elia/sql/Desktop/Factoring/Factoring table.txt",
				"/C/javaApp/webBanking3/sql/SelectTrans.sql",
				"/X/Documents/Elia/sql/Desktop/Transfers online 24 7/ATM procedures updated.sql",
				"/C/Users/elia_harmouche/AppData/Local/Temp/7zO8861F7E6/OTPCodes.txt",
				"/X/java/NetBeans8/webBanking3/sql/SelectTrans.sql",
				"/X/Documents/Elia/sql/Desktop/Transfers online 24 7/DV_EBANKING_TRANSFER_RES.sql",
				"/C/Users/elia_harmouche/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.Outlook/X5J9Q58V/trCrdb-MCU180508_DET.txt",
				"/C/Users/elia_harmouche/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.Outlook/X5J9Q58V/trCrdb-MCU180509_DET.txt",
				"/C/javaApp/webBanking3/config.properties",
				"/C/javaApp/glassfish5/glassfish/domains/domain1/logs/server.log",
				"/X/Documents/Elia/sql/Desktop/ebanking CSC cards/CSC defs",
				"/X/Documents/Elia/sql/Desktop/Myriam CDR Financial Instruments.sql",
				"/C/icbs/CRDBD051003_nonFin.txt",
				"/C/javaApp/photoflow/logs/PhotoFlow.log",
				"/C/Users/elia_harmouche/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.Outlook/X5J9Q58V/CREDIT_BANK_USD.TXT",
				"/X/java/NetBeans8/webBanking3/sql/SelectWedAccIban.sql",
				"/X/Documents/Elia/sql/Desktop/ILO_accounting balance Marie Formula.sql",
				"/C/Users/elia_harmouche/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.Outlook/X5J9Q58V/gladyss.sql",
				"/C/Users/elia_harmouche/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.Outlook/X5J9Q58V/loans.txt",
				"/C/javaApp/PF2/logs/PhotoFlow.log",
				"/C/javaApp/PF2/target/logs/PhotoFlow.log",
				"/X/Documents/Elia/sql/Desktop/Profitability/Prof CFD data.sql",
				"/X/Documents/Elia/sql/Desktop/Profitability/Profitability.sql",
				"/C/Users/elia_harmouche/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.Outlook/X5J9Q58V/trCrdb-MCU180310_DET.TXT",
				"/X/Documents/Elia/sql/Desktop/Cynthia Tanios physicals.sql",
				"/X/Documents/Elia/sql/Desktop/Transfers online 24 7/Gaby request.sql",
				"/C/Users/elia_harmouche/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.Outlook/X5J9Q58V/FACTORING.txt",
				"/C/Users/elia_harmouche/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.Outlook/X5J9Q58V/RESERVATION.txt",
				"/C/Users/elia_harmouche/AppData/Local/Temp/Rar$DIa0.461/LICENSE.txt",
				"/X/Documents/Mohamed/Tuition Fees/data.txt",
				"/X/Documents/Elia/sql/Desktop/Profitability/Prof cards.sql",
				"/C/Users/elia_harmouche/AppData/Local/Temp/dtemp-aebf728173041659-20.dop/LoadExampleData.java",
				"/C/Users/elia_harmouche/AppData/Local/Temp/dtemp-873f908351845902-20.dop/AddressFinder.java",
				"/C/Users/elia_harmouche/AppData/Local/Temp/dtemp-b59f668351873764-20.dop/Address.java",
				"/C/Users/elia_harmouche/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.Outlook/X5J9Q58V/OFFICERS_LIST.txt",
				"/C/Users/elia_harmouche/AppData/Local/Temp/dtemp-8a5fd68174987444-20.dop/AddressFinder.java",
				"/X/java/NetBeans8/webBanking3/sql/SelectCust.sql",
				"/C/javaApp/PF2/target/application.home_IS_UNDEFINED/logs/application.log",
				"/C/logs/application.log",
				"/C/Users/elia_harmouche/Desktop/mail2.html",
				"/C/Users/elia_harmouche/AppData/Roaming/NetBeans/8.2/var/log/messages.log",
				"/X/Doc/ICBS password after import.txt",
				"/X/Documents/Elia/sql/Desktop/ebanking CSC cards/classes/org/tempuri/package-info.java",
				"/X/Documents/Elia/sql/Desktop/ebanking CSC cards/classes/org/tempuri/UpdateCustomerIBANResponse.java",
				"/X/Documents/Elia/sql/Desktop/ebanking CSC cards/classes/org/tempuri/UpdateCustomerDetailsResponse.java",
				"/X/Documents/Elia/sql/Desktop/ebanking CSC cards/classes/org/tempuri/ResponseHeader.java",
				"/X/Documents/Elia/sql/Desktop/ebanking CSC cards/classes/org/tempuri/ResponseStatus.java",
				"/X/Documents/Elia/sql/Desktop/ebanking CSC cards/classes/org/tempuri/CSCIntegration.java",
				"/X/Documents/Elia/sql/Desktop/ebanking CSC cards/classes/org/tempuri/BaseResponse.java",
				"/X/Documents/Elia/sql/Desktop/ebanking CSC cards/classes/org/tempuri/ArrayOfCardActivity.java",
				"/X/Documents/Elia/sql/Desktop/ebanking CSC cards/classes/org/tempuri/CSCIntegrationSoap.java",
				"/X/Documents/Elia/sql/Desktop/ebanking CSC cards/classes/org/tempuri/ResponseCustomerIBANs.java",
				"/X/Documents/Elia/sql/Desktop/ebanking CSC cards/classes/org/tempuri/ResponseCustomerDetails.java",
				"/C/Users/elia_harmouche/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.Outlook/X5J9Q58V/TuitionsFees_31-MAR-18.txt",
				"/C/Users/elia_harmouche/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.Outlook/X5J9Q58V/CreditBank.txt",
				"/C/Users/elia_harmouche/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.Outlook/X5J9Q58V/CB_Redemption_20180225.txt",
				"/C/Users/elia_harmouche/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.Outlook/X5J9Q58V/New Tables.txt",
				"/C/Users/elia_harmouche/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.Outlook/X5J9Q58V/count tables.txt",
				"/C/Users/elia_harmouche/AppData/Local/Temp/Rar$DIa0.968/3.CRB_PACK_ILO1.SQL",
				"/X/Documents/Elia/sql/Desktop/DV_ILO_BILL_CAPITAL.sql",
				"/C/Users/elia_harmouche/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.Outlook/X5J9Q58V/loans error sql.sql",
				"/X/Documents/Elia/sql/Desktop/Contract printing/Danielle contracts automation.txt",
				"/X/Documents/Elia/sql/Desktop/LC_LG/Jeanette LC Import Report BDL.sql",
				"/C/Users/elia_harmouche/AppData/Local/Temp/Rar$DIa0.211/3-Procedures.SQL",
				"/C/Users/elia_harmouche/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.Outlook/X5J9Q58V/ILOP PRODUCT.sql",
				"/C/Users/elia_harmouche/AppData/Local/Temp/Rar$DIa0.535/1-UpdTbl.SQL",
				"/C/Users/elia_harmouche/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.Outlook/X5J9Q58V/ILOP PRODUCT (3).sql",
				"/C/tmp/export.sql",
				"/X/Doc/11g DB pasword expiry.txt",
				"/C/Users/elia_harmouche/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.Outlook/X5J9Q58V/DV_TUITIONS_FEES_ACNTS.sql",
				"//dev-prd-app/Dev_9i/Documents/Mohamed/Tuition Fees/Scripts/Installation/CRB_AltTbl_18102017.sql",
				"//dev-prd-app/Dev_9i/Documents/Mohamed/Tuition Fees/Scripts/Installation/CRB_ScrnLbls_18102017.SQL",
				"//dev-prd-app/Dev_9i/Documents/Mohamed/Tuition Fees/Scripts/Installation/LOVScript.SQL",
				"//dev-prd-app/Dev_9i/Documents/Mohamed/Tuition Fees/Scripts/Installation/BBS_1385_1386.SQL",
				"//dev-prd-app/Dev_9i/Documents/Mohamed/Tuition Fees/Scripts/Installation/CRB_ScrnLbls_01122017.SQL",
				"//dev-prd-app/Dev_9i/Documents/Mohamed/Tuition Fees/Scripts/Installation/DV_TUITIONS_FEES_ACNTS.sql",
				"//dev-prd-app/Dev_9i/Documents/Mohamed/Tuition Fees/Scripts/Installation/BBSD_TUITIONS_FEES.sql",
				"/X/Documents/Elia/sql/Desktop/ATM Cash deposit/ATM Deposit Automation HD.sql",
				"/X/Documents/Elia/sql/Desktop/ATM Cash deposit/ATM CashDep new procedures.sql",
				"/C/Users/elia_harmouche/Desktop/install.sql",
				"/C/Users/elia_harmouche/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.Outlook/X5J9Q58V/scriptLC2.sql",
				"/C/Users/elia_harmouche/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.Outlook/X5J9Q58V/query for statistics sql.txt",
				"/C/Users/elia_harmouche/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.Outlook/X5J9Q58V/Query 2 - DB Server logs.txt",
				"/X/yared/MS Query_35299.txt",
				"/X/yared/MS Query_35380.txt",
				"/X/yared/MS Query_35597.txt",
				"/X/yared/MS Query_35463, 35571.txt",
				"/X/query.txt",
				"/X/query1.txt",
				"/C/Users/elia_harmouche/AppData/Local/Temp/baskerville - FarSide.txt",
				"/C/Users/elia_harmouche/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.Outlook/X5J9Q58V/AT6.txt",
				"/C/Users/elia_harmouche/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.Outlook/X5J9Q58V/2018-03-16 Online Banking fix.sql",
				"/C/Users/elia_harmouche/Desktop/UserDataService_GetUser.bak.sql",
				"/C/Users/elia_harmouche/Desktop/SecurityDataService_Login.bak.sql",
				"/X/Documents/Mohamed/Tuition Fees/Scripts/DV_TUITIONS_FEES_ACNTS.sql",
				"/X/Documents/Elia/sql/Desktop/Transfers online 24 7/ATM CashDep new procedures.sql",
				"/X/Documents/Elia/sql/Denise Fares 6sigma/6 Sigma 4 additional reports.sql",
				"/X/Documents/Elia/sql/Denise Fares 6sigma/6 sigma.txt",
				"/C/tmp/Reda Update purpose 30_6_2017.sql",
				"/C/Users/elia_harmouche/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.Outlook/X5J9Q58V/Logs Query.txt",
				"/C/tmp/Reda Update purpose 28_2_2018.sql",
				"/C/icbs/It_Dev/Dev01737c_2.txt",
				"/C/icbs/It_Dev/Dev01737c_3.txt",
				"/C/Users/elia_harmouche/Desktop/scriptLC2.sql",
				"/C/Users/elia_harmouche/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.Outlook/X5J9Q58V/Query 1 - DB logs.txt",
				"//192.168.0.238/backup$/1New ConTEXT document.txt",
				"/C/Users/elia_harmouche/Desktop/scriptLC.sql",
				"//192.168.12.22/javaApp/webBanking3/sql/SelectCust.sql",
				"/X/Documents/Elia/sql/Desktop/Nidal Collector work queue.sql"
			],
			"find":
			{
				"height": 40.8
			},
			"find_in_files":
			{
				"height": 0.0,
				"where_history":
				[
				]
			},
			"find_state":
			{
				"case_sensitive": false,
				"find_history":
				[
					"8181",
					"''",
					"DVS_DESC",
					"go",
					"5118415002173977",
					"192.168",
					"\"",
					"BBSD_BRCH_HLD_TRANSACTIONS",
					"bro",
					"||",
					"|",
					"'",
					"ILOD_TOPAY_CPT",
					"V_APR_RATE",
					"BBRD_ILO_TEMP_REP",
					"V_LOAN_TYPE",
					"ILOP_LOAN_TYPE",
					"COMM",
					"b_comm",
					"DV_RETAIL_SALESMEN",
					"DV_RETAIL_DEALERS",
					"SNU",
					"ILOM_INS_AMNT",
					"com",
					"Loan_status",
					",",
					"&",
					"\"",
					"v_date_du",
					"END LOOP;",
					"and goods_routing = ''T''",
					"and goods_routing = ''NL''",
					"to_char(:par_date_au,''dd/mm/yyyy'')",
					"''''",
					"'",
					"and lc_agent_name = 'BDL'",
					"and lc_resident = 'YES'",
					"''",
					"RCDC_DOC_AMOUNT",
					"  ",
					" ",
					"  ",
					"''",
					"_",
					"-",
					"\"",
					"'",
					"''",
					"'",
					"                 ",
					"  ",
					" ",
					"||'|'||",
					"''",
					"icbs.",
					"':BRCH_ACC'",
					"{1}",
					"DV_ONLINE_TRANS_RESER_REM",
					"127.0.0.1",
					"dv_taux_subv",
					"27852001",
					"V_Inside_working_hours_flg",
					"DV_ONLINE_TRANS_NET_POS_X",
					"V_Rate1",
					"2017",
					" ",
					"PROCEDURE",
					"P_CalculatedFrom",
					"gran",
					"grant",
					"20",
					"'",
					"''",
					"LC_EXPORT",
					"||",
					"''||",
					"''",
					"dv_hisps_cfd",
					"415",
					"RPD_BAL_4",
					"map untrusted to domain",
					"map untrusted to domain =",
					"V_CNAT_CODE_BEN",
					"V_FrmCacc",
					"8118",
					"''",
					"  ",
					"\\n",
					"/n",
					"8118",
					"ORG",
					"ORG_FACILITY",
					"Nbr_Unpaid_Bills",
					"fpd",
					"font",
					"'",
					"\"",
					" ",
					"V_Desc",
					"&",
					"\"",
					"payment",
					"payment report",
					"payment report is",
					"payment report is generated.",
					"OperationResultId",
					"TODAY_DATE",
					"V_TodayDate",
					"V_VAL_DATE_DR",
					"V_TodayDate",
					"V_Inside_working_hours_flg",
					"1507",
					"V_LocAmnt",
					"V_FrmAccAmnt",
					"P_InFrmAmntChr",
					"V_FrmAmnt",
					"P_InProcCode",
					"DV_ONLINE_TRANS_RESER",
					"V_FrmAccCurr",
					"V_FrmCurr",
					"in_BHLT_TIME_STAMP",
					"192.168",
					"er_",
					"OT_ER_GEN",
					"H_",
					"P_InTrsDateTime",
					"P_InProcCode",
					" "
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
					"'",
					"",
					"\\n",
					"/n",
					"'||'&'||'",
					"",
					"and goods_routing = ''L''",
					"and goods_routing = ''T''",
					"to_char(:par_date_au,'dd/mm/yyyy')",
					"'''",
					"''",
					"and goods_routing = 'NL'",
					"and goods_routing = 'NL'\n         ",
					"--and lc_resident = 'YES'\n         ",
					"--and lc_resident = 'YES'\n",
					"'",
					" ",
					"'",
					"-",
					"          ",
					"_",
					"",
					"''",
					"'",
					"''",
					" ",
					"_",
					",",
					"'",
					"",
					":BRCH_ACC",
					"0.0.0.0",
					"",
					"''",
					"'",
					"",
					"'",
					" ",
					"''",
					"",
					"'||'&'||'",
					"",
					":H_",
					"",
					"V_Sign",
					"''",
					"'",
					",",
					"",
					"\"",
					">",
					" ",
					"\"\"",
					"",
					"\\n",
					"/n",
					"",
					";",
					"update",
					"_",
					"v_date_du",
					"v_date_au",
					",",
					"_",
					"FU.",
					",",
					"'",
					"XXXXXXXX",
					"",
					"''",
					",",
					"'",
					",",
					"'",
					"",
					"'",
					"'30/09/2016'",
					",user,'DEV01844',sysdate);",
					"'",
					",",
					"'",
					"",
					"c.cdld_clbt",
					"c.cdld_clsg",
					"c.cdld_cdlg",
					"",
					"c.cdld_clnt",
					"c.cdld_ecos",
					"c.CDLD_CURR",
					"'",
					",",
					"s_year_2",
					"s_month_2",
					"s_month_1",
					"s_year_1"
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"incremental_find":
			{
				"height": 27.0
			},
			"input":
			{
				"height": 48.0
			},
			"menu_visible": true,
			"output.SublimeLinter":
			{
				"height": 0.0
			},
			"output.find_results":
			{
				"height": 0.0
			},
			"output.git":
			{
				"height": 95.0
			},
			"pinned_build_system": "",
			"replace":
			{
				"height": 50.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"show_minimap": true,
			"show_open_files": true,
			"show_tabs": true,
			"side_bar_visible": false,
			"side_bar_width": 188.0,
			"status_bar_visible": true,
			"template_settings":
			{
			}
		},
		"new_window_width": 721.6
	},
	"windows":
	[
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"the",
						"then"
					],
					[
						"varchar",
						"varchar2"
					],
					[
						"cust",
						"cust_id"
					]
				]
			},
			"buffers":
			[
				{
					"contents": "\ncreate or replace\nFUNCTION DV_FAC_PayRcv_INFO (IN_TRSD_BRCH_CODE    IN NUMBER,\n                             IN_TRSD_CACC_NUM     IN VARCHAR2,\n                             IN_TRSH_NUM          IN NUMBER,  \n                             IN_RETURN            IN NUMBER,\n                             IN_MODL_CODE         IN VARCHAR2, \n                             IN_SMOD_CODE         IN VARCHAR2, \n                             IN_TRSD_D_DESC       IN VARCHAR2, \n                             IN_TRSD_S_DESC       IN VARCHAR2,\n                             IN_BANCK_CODE    IN NUMBER default null\n    )\n  RETURN   VARCHAR2\nIS \n  V_FIELD_1                 VARCHAR2(160);\n  V_FIELD_2                 VARCHAR2(1020);\nBEGIN\n  if IN_MODL_CODE = 'PCHD' then  -- case checks\n    begin\n      Select --AF.PCHD_PURCHASED_CHECK   ,\n             TRANSLATE(UPPER(IN_TRSD_D_DESC),'1ABCDEFGHIJKLMNOPQRSTUVWXYZ.;:''\"&)(- ,/\\_$#@!%^*+=|?<>','1' ),  \n             BK.BANK_B_DESC\n       INTO  V_FIELD_1,\n             V_FIELD_2  \n       FROM  BBSC_BANKS BK\n      where BK.BANK_CODE = IN_BANCK_CODE\n        and ROWNUM =1 ; \n    exception when others then\n      V_FIELD_1  := nvl(TRANSLATE(UPPER(IN_TRSD_D_DESC),'1ABCDEFGHIJKLMNOPQRSTUVWXYZ.;:''\"&)(- ,/\\_$#@!%^*+=|?<>','1' ),IN_TRSH_NUM); \n      V_FIELD_2  := ' ';\n    END;    \n  elsif (in_MODL_CODE = 'ITR' ) then -- case SWIFT transfer\n    begin\n       select MVIT_BRCH_REF\n        into V_FIELD_1\n       from biit_disposal_payments\n       where DPAY_ACCNTG_TRANS_REF = IN_TRSH_NUM;\n      \n      select   nvl(max(   substr( MVIT_ORD_NAME||Chr(10)||\n                      mvit_pay_dets_1||Chr(10)||\n                      mvit_pay_dets_2||Chr(10)||\n                      mvit_pay_dets_3||Chr(10)||\n                      mvit_pay_dets_4,1,1000)),IN_TRSD_D_DESC)\n        into V_FIELD_2\n        from biit_inwrd_trs_mvts\n       where MVIT_BRCH_REF = V_FIELD_1\n         and ROWNUM =1 ;  \n     exception when others then   \n        select  (TRANSLATE(UPPER(substr(IN_TRSD_D_DESC,1,instr(IN_TRSD_D_DESC,'/')-1)),'1ABCDEFGHIJKLMNOPQRSTUVWXYZ.;:''\"&)(- ,/\\_$#@!%^*+=|?<>','1' )) ,\n                 nvl(max(   substr( MVIT_ORD_NAME||Chr(10)||\n                        mvit_pay_dets_1||Chr(10)||\n                        mvit_pay_dets_2||Chr(10)||\n                        mvit_pay_dets_3||Chr(10)||\n                        mvit_pay_dets_4,1,1000)),IN_TRSD_D_DESC)\n          into V_FIELD_1,\n               V_FIELD_2\n          from biit_inwrd_trs_mvts\n         where mvit_accntg_trans_ref = IN_TRSH_NUM\n           and ROWNUM =1 ; \n    end;\n  elsif (in_MODL_CODE = 'GEN' and in_SMOD_CODE in ('VER','VET') ) then -- case account transfer\n    select trsd_doc_reference ,\n           IN_TRSD_D_DESC \n      into V_FIELD_1,\n           V_FIELD_2\n      from BBSD_TRANSACTIONS_D\n     where TRSH_NUM = IN_TRSH_NUM\n       and trsd_line_seq = 1;  \n  elsif (in_MODL_CODE = 'GEN' and in_SMOD_CODE='ODS' ) then -- case Payment order\n    V_FIELD_1  := nvl(TRANSLATE(UPPER(IN_TRSD_D_DESC),'1ABCDEFGHIJKLMNOPQRSTUVWXYZ.;:''\"&)(- ,/\\_$#@!%^*+=|?<>','1' ),IN_TRSH_NUM); \n    V_FIELD_2  := nvl(IN_TRSD_S_DESC,' ');            \n  elsif (in_MODL_CODE = 'GEN' and in_SMOD_CODE='APL' ) then -- check through module GEN\n    V_FIELD_1  := nvl(TRANSLATE(UPPER(IN_TRSD_S_DESC),'1ABCDEFGHIJKLMNOPQRSTUVWXYZ.;:''\"&)(- ,/\\_$#@!%^*+=|?<>','1' ),IN_TRSH_NUM); \n    V_FIELD_2  := 'CREDITBANK S.A.L.';\n  elsif (in_MODL_CODE = 'GEN' and in_SMOD_CODE<>'VER' ) then -- case account transfer\n    V_FIELD_2 := IN_TRSD_D_DESC;\n    select 'transfer in your favor from '||cust_b_name\n      into V_FIELD_1\n      from bbsd_customers\n     where cust_id = substr(IN_TRSD_S_DESC,7,7);\n  else\n    V_FIELD_1 := IN_TRSH_NUM;\n    V_FIELD_2 := IN_TRSD_D_DESC;\n  end if;\n  if IN_RETURN = 1 then\n    return   V_FIELD_1;\n  elsif IN_RETURN = 2 then   \n    return   V_FIELD_2;\n  else\n    return   null;\n  end if;\nexception when others then\n  return   null;\nEND;    \n/\n\n",
					"settings":
					{
						"buffer_size": 3916,
						"line_ending": "Windows"
					}
				},
				{
					"contents": "\n\n  for db_accounts  in (\n      select  a.cacc_num         cacc_num,\n              a.cust_id          cust_id ,\n              a.cacc_b_name      cacc_name,\n              a.actp_type        actp_type,\n              b.actp_b_desc      actp_desc,   \n              b.acnt_num         acnt_num,\n              a.curr_code        curr_code,\n              a.brch_code        brch_code,\n              nvl(a.cacc_cr_amnt_1,0)+nvl(a.cacc_cr_amnt_2,0)\n                +nvl(a.cacc_cr_amnt_3,0)-- +nvl(a.cacc_cr_mv_amnt,0)\n                -nvl(a.cacc_db_amnt_1,0)-nvl(a.cacc_db_amnt_2,0)\n                -nvl(a.cacc_db_amnt_3,0)-- -nvl(a.cacc_db_mv_amnt,0) \n              balance,   \n              nvl(cacc_cr_limit_amnt,0) cr_limit,  \n              Decode(nvl(A.cacc_high_db_comm_ind,0),1,decode(nvl(A.cacc_comm_flg,0)\n                      ,2,A.cacc_comm_rate,b.ACTP_COMMISSION),0)   Comm_rate,\n            --  decode(decode(substr(b.acnt_num,1,1),'4',1,decode(substr(b.acnt_num,1,3),'301',1,0)),1,\n                --    (365 - ((sysdate-1)- a.CACC_CR_LIMIT_APPL_DATE)),null)  Facility_Tenor\n             decode(decode(substr(b.acnt_num,1,1),'4',1,decode(substr(b.acnt_num,1,3),'301',1,0)),1,\n                      ((a.CACC_CR_LIMIT_MAT_DATE) - sysdate +1),null)  Facility_Tenor\n                      \n          from bbsd_cust_accounts a,\n                  bbsc_cust_accnt_types b\n                --  (select max(bdate) as max_date from bbsd_cbkbals) cb\n                  -- bbsd_cust_members c\n          where   (substr(b.acnt_num,1,1)='4'\n                   or substr(b.acnt_num,1,3)='301'\n                   or b.acnt_num ='899900993'\n                   or substr(b.acnt_num,1,4) in('8011','8016','8021','8022','8024'))\n                  and a.actp_type=b.actp_type\n                  and (substr(b.acnt_num,1,4)<>'4241' or b.acnt_num ='424100205') \n                  and b.acnt_num not in('802100641' , '423100436' , '461100438')\n               -- and a.actp_type=173\n               -- and a.cacc_num=1012499030931411\n               -- and a.cacc_num=1012499030931325\n                  and a.cust_id = all_customers.cust_id\n                  and ((nvl(a.cacc_cr_amnt_1,0)+nvl(a.cacc_cr_amnt_2,0)\n                       +nvl(a.cacc_cr_amnt_3,0)-- +nvl(a.cacc_cr_mv_amnt,0)\n                       -nvl(a.cacc_db_amnt_1,0)-nvl(a.cacc_db_amnt_2,0)\n                       -nvl(a.cacc_db_amnt_3,0)-- -nvl(a.cacc_db_mv_amnt,0)\n                       <0)\n                     or    \n              DV_SIGMA01479_HAS_UNP(a.brch_code ,a.cacc_num ,a.cust_id,a.curr_code)=1\n               ) )loop\n\n\n-- cash colateral gage\ninsert into dv_prorata_dev1479 \n            (dv_sequence,\n             brch_code,\n             cacc_num,\n             data_type,\n             cust_id,\n             curr_code,\n             actp_type,\n             amnt_org_curr,\n             amnt_cv_usd,\n             program_id,\n             user_id,\n             time_stamp)\n             (select distinct \n                           v_dv_sequence,\n                           b.gbad_blocked_brch,\n                           b.gbad_blocked_cacc, \n                           'ACC_COL_CASH', \n                           null, \n                           substr(b.gbad_blocked_cacc,1,3), \n                           substr(b.gbad_blocked_cacc,4,3), \n                           (nvl(d.cacc_cr_amnt_1,0)+nvl(d.cacc_cr_amnt_2,0)\n                            +nvl(d.cacc_cr_amnt_3,0)--  +nvl(d.cacc_cr_mv_amnt,0)\n                            -nvl(d.cacc_db_amnt_1,0)-nvl(d.cacc_db_amnt_2,0)\n                            -nvl(d.cacc_db_amnt_3,0)--  -nvl(d.cacc_db_mv_amnt,0)\n                            ), \n                           (nvl(d.cacc_cr_amnt_1,0)+nvl(d.cacc_cr_amnt_2,0)\n                            +nvl(d.cacc_cr_amnt_3,0)--  +nvl(d.cacc_cr_mv_amnt,0)\n                            -nvl(d.cacc_db_amnt_1,0)-nvl(d.cacc_db_amnt_2,0)\n                            -nvl(d.cacc_db_amnt_3,0)--  -nvl(d.cacc_db_mv_amnt,0)\n                            )*DV_CURR_RATE(substr(b.gbad_blocked_cacc,1,3),sysdate)/pack_cours.v_cours_tab(101), \n                          'DEV01479',\n                           user,\n                           sysdate\n                      from  bbsd_grtees_m a,\n                            bbsd_grtees_blk_accnts_d  b,\n                            bbsd_grtees_blk_accnts    c,\n                            bbsd_cust_accounts d\n                      where  a.grtm_sequence = c.grtm_sequence\n                         and a.grtm_sequence = b.grtm_sequence\n                         and b.gbad_blocked_cacc=d.cacc_num\n                         and b.gbad_blocked_brch=d.brch_code\n                         and a.GTYP_CODE = 20\n                         and db_accounts.cacc_num = c.gbla_cacc\n                         and db_accounts.brch_code = c.gbla_brch\n                         and (nvl(d.cacc_cr_amnt_1,0)+nvl(d.cacc_cr_amnt_2,0)\n                            +nvl(d.cacc_cr_amnt_3,0)--  +nvl(d.cacc_cr_mv_amnt,0)\n                            -nvl(d.cacc_db_amnt_1,0)-nvl(d.cacc_db_amnt_2,0)\n                            -nvl(d.cacc_db_amnt_3,0)--  -nvl(d.cacc_db_mv_amnt,0)\n                            )>0         -- Elia Added 3/12/2015\n                            ); \nif substr(db_accounts.acnt_num,1,4) in ('8011','8024')\n  then\n      insert into dv_prorata_dev1479 \n              (dv_sequence,\n               brch_code,\n               cacc_num,\n               data_type,\n               cust_id,\n               curr_code,\n               actp_type,\n               amnt_org_curr,\n               amnt_cv_usd,\n               program_id,\n               user_id,\n               time_stamp) \n               (select distinct \n                       v_dv_sequence,\n                       d.brch_code,\n                       d.cacc_num, \n                       'ACC_COL_CASH', \n                       null, \n                       d.curr_code, \n                       d.actp_type, \n                       (nvl(d.cacc_cr_amnt_1,0)+nvl(d.cacc_cr_amnt_2,0)\n                        +nvl(d.cacc_cr_amnt_3,0)--  +nvl(d.cacc_cr_mv_amnt,0)\n                        -nvl(d.cacc_db_amnt_1,0)-nvl(d.cacc_db_amnt_2,0)\n                        -nvl(d.cacc_db_amnt_3,0)--  -nvl(d.cacc_db_mv_amnt,0)\n                        ), \n                       (nvl(d.cacc_cr_amnt_1,0)+nvl(d.cacc_cr_amnt_2,0)\n                        +nvl(d.cacc_cr_amnt_3,0)--  +nvl(d.cacc_cr_mv_amnt,0)\n                        -nvl(d.cacc_db_amnt_1,0)-nvl(d.cacc_db_amnt_2,0)\n                        -nvl(d.cacc_db_amnt_3,0)--  -nvl(d.cacc_db_mv_amnt,0)\n                        )*DV_CURR_RATE(d.curr_code,sysdate)/pack_cours.v_cours_tab(101), \n                       'DEV01479',\n                       user,\n                       sysdate\n                 from  bbsd_cust_accounts d\n                 where d.cust_id = db_accounts.cust_id\n                   and d.actp_type in (315));\nend if;\n\n\nPROCEDURE DV_MAX_DELAY_DAYS_CBK\n(\np_brch_code             in varchar2,\np_cacc_num              in varchar2,\np_date_du               in date,\np_date_au               in date,\np_MAX_DELAY_DAYS        in out number\n)\nIs  \n    v_days  number(4) :=0; \n    v_flag  number(1) :=0;\n    v_previous  date; \n    v_date_du  date; \n    v_date_au  date; \n    \n    v_max_days  number(4) :=0; \n\nBegin \n  -- Initializing the counters\n  p_MAX_DELAY_DAYS   :=0;\n  \n  -- Setting up the dates\n    v_date_du := p_date_du;\n    v_date_au := p_date_au;\n  \n  for c_balLim in ( select v_date_au-level bdate, \n              nvl(dv_solde(p_brch_code,p_cacc_num,v_date_au-level),0) solde,\n              nvl(dv_get_limit(p_brch_code,p_cacc_num,v_date_au-level),0) limite \n    from dual \n    connect by level<(v_date_au-v_date_du) \n    order by bdate) loop            \n    if (nvl(c_balLim.solde,0) + nvl(c_balLim.limite,0)) < 0 then \n      v_days :=v_days+1;\n    else  \n      v_days :=0;\n    end if;\n    if v_days>v_max_days\n        then v_max_days := v_days;\n    end if;\n  end loop;\n  p_MAX_DELAY_DAYS := v_max_days; \n\nexception when others then\n  alert_mess ( sqlcode || '  ' || substr(sqlerrm,1,200), 'note');\n  \nEnd;\n\n\nPROCEDURE DV_MAX_DELAY_DAYS_Global\n(\np_brch_code             in varchar2,\np_cacc_num              in varchar2,\np_date_du               in date,\np_date_au               in date,\np_MAX_DELAY_DAYS        in out number\n)\nIs  \n  --  v_solde           bbsd_eom_balances.eomb_db_amnt%TYPE;\n  --  v_limit           bbsd_eom_balances.eomb_cr_limit%TYPE;\n  \n    v_days  number(4) :=0;\n    v_flag  number(1) :=0;\n    v_count number(3) :=0;\n\n    v_date_over date  :=  sysdate;\n    v_date_under date :=  sysdate;\n\n    v_max_days  number(4) :=0; \n\n  ----------------------------------------------------------\n  \n  \n    v_Limit_amnt      number(18,3);\n    v_Limit_Curr      number(3);\n    v_Limit_amnt_CV   number(18,3); \n    v_facility_code   number(5);  \n    v_facility_desc   varchar2(80);\n    V_limit           number(18,3);  \n    V_rate            number(14,5);\n    v_CRLN_SEQUENCE   number(9);  \n    \n    \ncursor all_transactions (in_date_du  date,in_date_au  date)is\n      select    a.trsh_operation_date op_date,\n                decode(htrs_dc,'C',+nvl(htrs_amount,0),-nvl(htrs_amount,0)) amount,\n                a.gopm_code gopm_code,\n                a.accd_code\n        from    bbsd_hist_transactions a\n        where   a.htrs_brch_code=p_brch_code\n                and   a.htrs_cacc_num=p_cacc_num\n                and   a.htrs_acc_ind = 1\n                -- and (a.gopm_code <> 'tx'  and accd_code <> 953)\n                and   a.trsh_operation_date between in_date_du and in_date_au\n          order by 1 asc;\n\nBegin \n  \n  \n  -- Initializing the counters\n  \n  -- Setting up the dates\n  --p_date_du := add_months(sysdate,-12);\n  --p_date_au   := sysdate; \n\n  ----------------------------------------------------------\n  \n  \nbegin\n    for c_cursor1 in (\n    Select  A.CRLN_SEQUENCE      CRLN_SEQUENCE,\n            A.CRLN_BRCH_CODE     CRLN_BRCH_CODE, \n            A.CRLN_FCLT_AMOUNT        Limit_amnt, \n            A.CURR_CODE               Limit_Curr,\n            A.CRLN_FCLT_AMOUNT*dv_curr_rate(A.CURR_CODE,p_date_au)  Limit_amnt_CV,\n            A.fclm_code               facility_code,\n            M.FCLM_DESC               facility_desc\n       From bbsd_credit_lines      A,\n            bbsc_facility_types_d  B,\n            bbsd_cust_accounts     C,\n            BBSD_CR_LINE_CACCS     F,\n            bbsc_facility_types_m  M\n       where  C.BRCH_CODE  =p_brch_code\n         and  C.CACC_NUM   =p_cacc_num \n         and  A.FCLM_CODE  = B.FCLM_CODE \n         and  A.FCLM_CODE  = M.FCLM_CODE\n         and  B.FCLD_FLG = 1  \n         and  C.CACC_FUNCTION_FLG = 0 \n         and  B.FCLD_TYPE = C.ACTP_TYPE \n         and  A.CRLN_CUST_GRP_ID = C.cust_id\n         and  C.BRCH_CODE    = F.CRLC_BRCH_CODE\n         and  C.CACC_NUM     = F.CRLC_CACC_NUM \n         and  F.CRLN_SEQUENCE = A.CRLN_SEQUENCE\n         and  F.CRLN_BRCH_CODE = A.CRLN_BRCH_CODE\n         and  nvl(A.CRLN_PONCTUAL_FLG,0) = 1) loop\n        if v_Limit_amnt is null or v_Limit_amnt_CV > c_cursor1.Limit_amnt_CV then\n          v_Limit_amnt := c_cursor1.Limit_amnt; \n          v_Limit_Curr   :=   c_cursor1.Limit_Curr; \n          v_Limit_amnt_CV :=  c_cursor1.Limit_amnt_CV; \n          v_facility_code :=  c_cursor1.facility_code; \n          v_facility_desc :=  c_cursor1.facility_desc;\n          v_CRLN_SEQUENCE :=  c_cursor1.CRLN_SEQUENCE;  \n        end if;\n      end loop;   \n     if v_Limit_amnt is  null then   \n         for c_cursor2 in (\n        Select  A.CRLN_SEQUENCE      CRLN_SEQUENCE,\n                A.CRLN_BRCH_CODE     CRLN_BRCH_CODE, \n                A.CRLN_FCLT_AMOUNT        Limit_amnt, \n                A.CURR_CODE               Limit_Curr,\n                A.CRLN_FCLT_AMOUNT*dv_curr_rate(A.CURR_CODE,p_date_au)  Limit_amnt_CV,\n                A.fclm_code               facility_code,\n                M.FCLM_DESC               facility_desc\n           From bbsd_credit_lines      A,\n                bbsc_facility_types_d  B,\n                bbsd_cust_accounts     C,\n                bbsc_facility_types_m  M\n           where  C.BRCH_CODE  =p_brch_code\n             and  C.CACC_NUM   =p_cacc_num \n             and  A.FCLM_CODE  = B.FCLM_CODE \n             and  A.FCLM_CODE  = M.FCLM_CODE\n             and  B.FCLD_FLG = 1  \n             and  C.CACC_FUNCTION_FLG = 0 \n             and  B.FCLD_TYPE = C.ACTP_TYPE \n             and  A.CRLN_CUST_GRP_ID = C.cust_id\n             and  nvl(A.CRLN_PONCTUAL_FLG,0) = 0) loop\n            if v_Limit_amnt is null \n              or v_Limit_amnt_CV > c_cursor2.Limit_amnt_CV -- no need to add DV_SUB_CREDIT_LINES\n              then \n              v_Limit_amnt := c_cursor2.Limit_amnt; \n              v_Limit_Curr   :=   c_cursor2.Limit_Curr; \n              v_Limit_amnt_CV :=  c_cursor2.Limit_amnt_CV; \n              v_facility_code :=  c_cursor2.facility_code; \n              v_facility_desc :=  c_cursor2.facility_desc;\n              v_CRLN_SEQUENCE := c_cursor2.CRLN_SEQUENCE; \n            end if;\n             end loop; \n      end if;       \n        \n  \n   for c_cursor3 in (\n        Select  L.bdate      op_date,\n                L.BMBAL      v_solde, \n                L.BBAL        v_limitEOM\n           From bbsd_cbkbals@oradw  L\n           where L.bdate between p_date_du and p_date_au \n             and L.breff = 'CRLN'\n             and L.bcust = substr(p_cacc_num,7,7)\n             and L.brefnbr  = v_CRLN_SEQUENCE\n          order by L.bdate asc)\n           loop\n           \n           \n           \n           \n           \n     \n  --if c_cursor3.v_solde + c_cursor3.v_limitEOM<0 -- Is over limit?\n    \n     if  nvl(c_cursor3.v_limitEOM,0) - nvl(c_cursor3.v_solde,0) <0  -- Is over limit?\n      then \n          if v_flag=0 -- wasn't over limit but is now\n                then  v_date_over:=c_cursor3.op_date;\n                      v_flag :=1; -- FLAG OVER LIMIT\n                      v_count:= v_count +1;\n\n                else   -- was already over limit\n                        null;\n                end if;\n\n    else  -- not over limit\n\n      if v_flag =0  -- wasn't over limit initially\n          then null; --no problem\n      else  -- was over limit beforehand\n          v_date_under := c_cursor3.op_date ;\n          v_days := v_date_under - v_date_over; --calculate days he stayed over limit\n          v_flag :=0; -- flag under limit\n\n      end if;\n    end if;\n\n  -- Updating Counters\n  \n            \n          if v_days>v_max_days\n            then v_max_days := v_days;\n          end if;\n\n\n  v_days :=0; -- reset counter\n\n    end loop;\n\n    -- end reading all transactions\n    -- special case: if he is over limit as of last transaction\n\n      if v_flag =1\n        then  v_days := sysdate - v_date_over;\n\n          if v_days>v_max_days\n            then v_max_days := v_days;\n          end if;\n          \n      end if;\n\n  \nend;  \n  \n----------------------------------------------- \n  p_MAX_DELAY_DAYS := v_max_days;\n  \nexception when others then\n  alert_mess ( sqlcode || '  ' || substr(sqlerrm,1,200), 'note');\n  \nEnd;\n",
					"settings":
					{
						"buffer_size": 15031,
						"line_ending": "Windows"
					}
				},
				{
					"contents": "\nSelect ILOM_SEQUENCE TPLR_REMITTANCE,\n       EFFET_NO TPLR_REFERENCE_1,\n       ECHEANCES TPLR_MATURITY_1,\n       EMPRUNT TPLR_AMOUNT_2,\n       installement TPLR_AMOUNT_1,\n       CAPITAL TPLR_INTEREST_1,\n       INTERETS TPLR_INTEREST_2,\n       COMM,\n       JOURS,\n       NULL TPLR_NB_BILLS   ,\n       NULL TPLR_TOT_AMOUNT ,\n       NULL TPLR_TOT_INTEREST ,\n       NULL TPLR_TOT_COMM ,\n       NULL TPLR_REFERENCE_2  ,\n       TO_DATE(NULL) TPLR_MATURITY_2  ,\n       COMM_RATE TPLR_COMM_1    ,\n       NULL TPLR_COMM_2\n\nfrom \n (SELECT D.ILOM_SEQUENCE ,\n         D1.bill_nbr        EFFET_NO,\n       --  nvl(D.ILOD_CPT_AMNT,0)  - (nvl(ILOD_TOPAY_CPT,0) ) EMPRUNT,\n         Nvl( ( SELECT xx.ILOD_CPT_AMNT \n                  FROM BBRD_ILO_INFOS_D xx\n                 WHERE xx.ILOM_SEQUENCE = D.ILOM_SEQUENCE \n                   AND xx.ILOD_BILL_SEQ = D.ILOD_BILL_SEQ + 1),0) EMPRUNT,\n         D.ILOD_BILL_INT        INTERETS,\n         D.ILOD_BILL_MTR       ECHEANCES,\n         D.ILOD_COMM_BAL       COMM,\n         D.ILOD_INT_NBR_DAYS   JOURS,\n        -- nvl(ILOD_TOPAY_CPT ,0)    capital,\n         DV_ILO_BILL_CAPITAL (D.ILOM_SEQUENCE,D.ILOD_BILL_SEQ)    capital,\n         D.ILOD_BILL_MNT installement,\n         D.ILOD_BILL_MTR        order1,\n         (select ilom_comm_bal_rate from bbrd_ilo_infos_m m where m.ilom_sequence = d.ilom_sequence) comm_rate\n    FROM BBRD_ILO_INFOS_D D ,\n         (Select ILOM_SEQUENCE   ILOM_SEQUENCE,\n                 ILOD_BILL_SEQ   ILOD_BILL_SEQ,\n                 rownum    bill_nbr\n             from BBRD_ILO_INFOS_D DD1\n               where DD1.ILOM_SEQUENCE =  :N_PARAM01\n                     and DD1.ILOD_BILL_MNT >0\n                     and DD1.ILSB_CODE <> 10) D1\n        WHERE D.ILOM_SEQUENCE =  :N_PARAM01\n          and D1.ILOM_SEQUENCE = D.ILOM_SEQUENCE\n          and D1.ILOD_BILL_SEQ = D.ILOD_BILL_SEQ\n          AND D.ILSB_CODE <> 10\n          and D.ILOD_BILL_MTR between to_date(''||to_char(:PAR_DATE_DU,'DD/MM/YYYY')||'','DD/MM/YYYY') and\n                      to_date(''||to_char(:PAR_DATE_AU,'DD/MM/YYYY')||'','DD/MM/YYYY')-1\nUNION \nSELECT  D.ILOM_SEQUENCE ,\n         NULL        EFFET_NO,\n        -- nvl(D.ILOD_CPT_AMNT,0)  - (nvl(ILOD_TOPAY_CPT,0) ) EMPRUNT,\n         Nvl( ( SELECT xx.ILOD_CPT_AMNT \n                  FROM BBRD_ILO_INFOS_D xx\n                 WHERE xx.ILOM_SEQUENCE = D.ILOM_SEQUENCE \n                   AND xx.ILOD_BILL_SEQ = D.ILOD_BILL_SEQ + 1),0) EMPRUNT,\n         D.ILOD_BILL_INT        INTERETS,\n         D.ILOD_BILL_MTR       ECHEANCES,\n         D.ILOD_COMM_BAL       COMM,\n         D.ILOD_INT_NBR_DAYS   JOURS,\n        -- nvl(ILOD_TOPAY_CPT ,0)   capital,\n         DV_ILO_BILL_CAPITAL ( D.ILOM_SEQUENCE, D.ILOD_BILL_SEQ)    capital,\n         D.ILOD_BILL_MNT installement,\n         D.ILOD_BILL_MTR+1        order1,\n         (select ilom_comm_bal_rate \n            from bbrd_ilo_infos_m m \n              where m.ilom_sequence = d.ilom_sequence) comm_rate\n   FROM BBRD_ILO_INFOS_D D ,\n       (Select ILOM_SEQUENCE   ILOM_SEQUENCE,\n               ILOD_BILL_SEQ   ILOD_BILL_SEQ,\n               rownum    bill_nbr\n          from BBRD_ILO_INFOS_D DD1\n            where DD1.ILOM_SEQUENCE =  :N_PARAM01\n              and DD1.ILOD_BILL_MNT < 0\n              and DD1.ILSB_CODE <> 10\n              and DD1. ILOD_BILL_MTR >= to_date(''||to_char(:PAR_DATE_DU,'DD/MM/YYYY')||'','DD/MM/YYYY')) D1\n      WHERE D.ILOM_SEQUENCE =  :N_PARAM01\n       and  D1.ILOM_SEQUENCE = D.ILOM_SEQUENCE\n       and  D1.ILOD_BILL_SEQ = D.ILOD_BILL_SEQ\n       and  D.ILSB_CODE <> 10\n       and  D.ILOD_BILL_MTR between to_date(''||to_char(:PAR_DATE_DU,'DD/MM/YYYY')||'','DD/MM/YYYY') and\n                                   to_date(''||to_char(:PAR_DATE_AU,'DD/MM/YYYY')||'','DD/MM/YYYY')-1\n\nunion\nSELECT  D.ILOM_SEQUENCE ,\n        Null        EFFET_NO,\n     --   nvl(D.ILOD_CPT_AMNT,0)  - (nvl(ILOD_TOPAY_CPT,0) ) EMPRUNT,\n         Nvl( ( SELECT xx.ILOD_CPT_AMNT \n                  FROM BBRD_ILO_INFOS_D xx\n                 WHERE xx.ILOM_SEQUENCE = D.ILOM_SEQUENCE \n                   AND xx.ILOD_BILL_SEQ = D.ILOD_BILL_SEQ + 1),0) EMPRUNT,\n        to_number(null)       INTERETS,\n        D.ILOD_BILL_MTR       ECHEANCES,\n        to_number(null)   COMM,\n        Null   JOURS,\n        null   capital,\n        Null   installement,\n        D.ILOD_BILL_MTR+11         order1,\n        (select ilom_comm_bal_rate from bbrd_ilo_infos_m m where m.ilom_sequence = d.ilom_sequence) comm_rate\n  FROM BBRD_ILO_INFOS_D D\n    where (ILOM_SEQUENCE,ILOD_BILL_SEQ) in (Select max(ILOM_SEQUENCE)   ILOM_SEQUENCE,\n                                                   max(ILOD_BILL_SEQ)   ILOD_BILL_SEQ\n                                              from BBRD_ILO_INFOS_D DD1\n                                                where DD1.ILOM_SEQUENCE =  :N_PARAM01\n                                                  and DD1.ILOD_BILL_MTR between to_date(''||to_char(:PAR_DATE_DU,'DD/MM/YYYY')||'','DD/MM/YYYY') and\n                                                                                to_date(''||to_char(:PAR_DATE_AU,'DD/MM/YYYY')||'','DD/MM/YYYY')-1)\n      AND D.ILSB_CODE <> 10)\norder by order1;\n\n",
					"settings":
					{
						"buffer_size": 5112,
						"line_ending": "Windows"
					}
				},
				{
					"contents": "PROCEDURE DV_processing IS\n\n  v_excel_path    varchar2(200);\n  modele_excel    varchar2(100) := 'Macro_Dev01479.Xls';\n  \n  s_dest_name     varchar2(50);\n  cmd_line        varchar2(30000);\n  s_entete        varchar2(3000);\n\n  v_date_du       date :=add_months(sysdate,-12);\n  v_date_au       date :=sysdate;\n  v_count_over7   number :=0;\n  v_count_over30  number:=0;\n  v_count_over60  number:=0;\n  v_count_over90  number:=0;\n  \n  v_MAX_DELAY_DAYS   number:=0;\n  \n  \n  v_MAX_DELAY_DAYS_5_YEARS          NUMBER(18,3):=0;\n  v_DELAY_DAYS_Frequency            NUMBER(18,3):=0;\n  v_DELAY_DAYS_AT_REP_DATE          NUMBER(18,3):=0;\n  v_DELAY_DAYS_CONDITIONED          NUMBER(18,3):=0;\n\n  v_labels        varchar2(2000); \n  v_file_name     varchar2(100);  \n  v_linebuf       varchar2(20000);\n\n  v_usd_rate      number(12,5);\n  v_amnt_cv_usd   number(18,3);\n\n  v_dv_sequence   number(9);\n\n  v_global_limit  number(1);\n\n  v_cal_taux      varchar2(1800);\n  v_total_amount  number;\n  v_total_amount_usd number;\n  v_date          date;\n  v_count         number;\n  v_fees_amnt     number :=0;\n  v_fees_amnt_usd number :=0;\n\n  cbk_limit       number;\n  cbk_limit_usd   number;\n  cbk_m_date      date;\n  \n  v_facility_tenor number(12);\n\n  v_average_outstanding_amount number(18,3);\n  v_avg_outstanding_amount_usd number(18,3);\n  \n  v_ilom_flag     number(3);\n  \n  error_brch_code number(3);\n  error_cacc_num  varchar2(16);\n  \n  v_MIN_DELAY   number;\n  v_MAX_DELAY   number;\n  \n  v_error_log_acc     varchar2(100);  \n  \nbegin\n\n  :Please_Wait := 'Please Wait. Generating Excel File.';\n  Synchronize;\n\n  -- empty the table\n  delete from dv_dev01479;\n  delete from dv_prorata_dev1479;\n  no_message('commit_form');\n  \n  delete dv_prorata_dev1479_b;\n  no_message('commit_form');  \n\n  select dv_curr_rate(101,sysdate)\n    into v_usd_rate\n    from dual;\n\n  pack_cours.dv_cours_monnaie(sysdate);\n/*\n  v_File_name := 'Data_Dev01479.txt';\n  \n  v_labels := 'Obligor ID|Obligor Name|Account Number|Facility Type Code|Facility Description|'\n                ||'Facility Currency Code|Branch Code|Facility Authorized Amount|Facility Authorized Amount (In USD)|'\n                ||'Facility Outstanding Amount|Facility Outstanding Amount(In USD)|Date of Outstanding|'\n                \n                ||'Collateral Code|Collateral Currency Code|Collateral Amount(in LBP)|Collateral Amount(in USD)|'\n                ||'Financial Instr. Curr Code|Financial Instr. Value (in LBP)| Financial Instr. Value (in USD)|'\n                ||'Kafalat Guar Curr Code|Kafalat Guar Amnt (in LBP)|Kafalat Guar Amnt (in USD)|'\n                \n                ||'Average Outstanding Amount|Average Outsanding Amount(in USD)|Interest Rate|Fees %|Fees in Org. Currency|Fees in USD|'\n                ||'Number of defaults(over 7 days)|Number of defaults(over 30 days)|Number of defaults(over 60 days)|Number of defaults(over 90 days)|'\n--              ||'Losses from defaults over 1 year%\n                ||'Facility Risk Rating|'\n                ||'Facility Tenor(Days)|Global Limit Ref|Customer Category|';\n                \n  Dv_write_line_srv(v_File_name, v_labels,'w'); \n*/\n\n-- dfd = pack_cours.v_cours_tab(p_curr_code)/(pack_cours.v_cours_tab(101)\n\nfor all_customers  in (\n  select a.cust_id,\n         decode(a.cctg_code,1,'RET',2,'COR',4,'SMM','N/A') man_by\n    from bbsd_customers  a--,\n         --bbsd_cust_members c\n      where -- a.cust_id = c.cust_id\n      --  and c.cusm_type=2       \n       -- and \n       ( NVL(a.caof_code,0) <>0  -- all customers who have a managed by are taken into account   \n        or a.cust_id in (select distinct cust_id \n                          from bbsd_cust_accounts \n                          where actp_type = 993))\n       --and a.cust_id =9017146\n       -- and a.cust_id =107536\n      -- and rownum<10\n      order by 1) loop\n\n  for db_accounts  in (\n      select  a.cacc_num         cacc_num,\n              a.cust_id          cust_id ,\n              a.cacc_b_name      cacc_name,\n              a.actp_type        actp_type,\n              b.actp_b_desc      actp_desc,   \n              b.acnt_num         acnt_num,\n              a.curr_code        curr_code,\n              a.brch_code        brch_code,\n              nvl(a.cacc_cr_amnt_1,0)+nvl(a.cacc_cr_amnt_2,0)\n                +nvl(a.cacc_cr_amnt_3,0)-- +nvl(a.cacc_cr_mv_amnt,0)\n                -nvl(a.cacc_db_amnt_1,0)-nvl(a.cacc_db_amnt_2,0)\n                -nvl(a.cacc_db_amnt_3,0)-- -nvl(a.cacc_db_mv_amnt,0) \n              balance,   \n              nvl(cacc_cr_limit_amnt,0) cr_limit,  \n              Decode(nvl(A.cacc_high_db_comm_ind,0),1,decode(nvl(A.cacc_comm_flg,0)\n                      ,2,A.cacc_comm_rate,b.ACTP_COMMISSION),0)   Comm_rate,\n            --  decode(decode(substr(b.acnt_num,1,1),'4',1,decode(substr(b.acnt_num,1,3),'301',1,0)),1,\n                --    (365 - ((sysdate-1)- a.CACC_CR_LIMIT_APPL_DATE)),null)  Facility_Tenor\n             decode(decode(substr(b.acnt_num,1,1),'4',1,decode(substr(b.acnt_num,1,3),'301',1,0)),1,\n                      ((a.CACC_CR_LIMIT_MAT_DATE) - sysdate +1),null)  Facility_Tenor\n                      \n          from bbsd_cust_accounts a,\n                  bbsc_cust_accnt_types b\n                --  (select max(bdate) as max_date from bbsd_cbkbals) cb\n                  -- bbsd_cust_members c\n          where   (substr(b.acnt_num,1,1)='4'\n                   or substr(b.acnt_num,1,3)='301'\n                   or b.acnt_num ='899900993'\n                   or substr(b.acnt_num,1,4) in('8011','8016','8021','8022','8024'))\n                  and a.actp_type=b.actp_type\n                  and (substr(b.acnt_num,1,4)<>'4241' or b.acnt_num ='424100205') \n                  and b.acnt_num not in('802100641' , '423100436' , '461100438')\n               -- and a.actp_type=173\n               -- and a.cacc_num=1012499030931411\n               -- and a.cacc_num=1012499030931325\n                  and a.cust_id = all_customers.cust_id\n                  and ((nvl(a.cacc_cr_amnt_1,0)+nvl(a.cacc_cr_amnt_2,0)\n                       +nvl(a.cacc_cr_amnt_3,0)-- +nvl(a.cacc_cr_mv_amnt,0)\n                       -nvl(a.cacc_db_amnt_1,0)-nvl(a.cacc_db_amnt_2,0)\n                       -nvl(a.cacc_db_amnt_3,0)-- -nvl(a.cacc_db_mv_amnt,0)\n                       <0)\n                     or    \n              DV_SIGMA01479_HAS_UNP(a.brch_code ,a.cacc_num ,a.cust_id,a.curr_code)=1\n               ) )loop\n\n       error_CACC_NUM:=db_accounts.cacc_num;\n       error_BRCH_CODE:=db_accounts.brch_code;\n\nif :S_log = 1 then       \n  DV_PROGRAM_LOG(error_BRCH_CODE||' '||error_CACC_NUM);\nend if;\n\n        select DV_SEQ_DEV1479.nextval\n          into v_DV_SEQUENCE\n          from dual; \n                          \nv_error_log_acc := db_accounts.cacc_num;\n\n\n-- main facility\ninsert into dv_prorata_dev1479 \n            (dv_sequence,\n             brch_code,\n             cacc_num,\n             data_type,\n             cust_id,\n             curr_code,\n             actp_type,\n             amnt_org_curr,\n             amnt_cv_usd,\n             program_id,\n             user_id,\n             time_stamp)\n             values(\n             v_dv_sequence,\n             db_accounts.brch_code,  \n             db_accounts.cacc_num,\n             'FACILITY', \n             db_accounts.cust_id, \n             db_accounts.curr_code, \n             db_accounts.actp_type, \n             db_accounts.balance, \n             db_accounts.balance*pack_cours.v_cours_tab(db_accounts.curr_code)/pack_cours.v_cours_tab(101), \n             'DEV01479',\n             user,\n             sysdate);              \n\n-- cash colateral gage\ninsert into dv_prorata_dev1479 \n            (dv_sequence,\n             brch_code,\n             cacc_num,\n             data_type,\n             cust_id,\n             curr_code,\n             actp_type,\n             amnt_org_curr,\n             amnt_cv_usd,\n             program_id,\n             user_id,\n             time_stamp)\n             (select distinct \n                           v_dv_sequence,\n                           b.gbad_blocked_brch,\n                           b.gbad_blocked_cacc, \n                           'ACC_COL_CASH', \n                           null, \n                           substr(b.gbad_blocked_cacc,1,3), \n                           substr(b.gbad_blocked_cacc,4,3), \n                           (nvl(d.cacc_cr_amnt_1,0)+nvl(d.cacc_cr_amnt_2,0)\n                            +nvl(d.cacc_cr_amnt_3,0)--  +nvl(d.cacc_cr_mv_amnt,0)\n                            -nvl(d.cacc_db_amnt_1,0)-nvl(d.cacc_db_amnt_2,0)\n                            -nvl(d.cacc_db_amnt_3,0)--  -nvl(d.cacc_db_mv_amnt,0)\n                            ), \n                           (nvl(d.cacc_cr_amnt_1,0)+nvl(d.cacc_cr_amnt_2,0)\n                            +nvl(d.cacc_cr_amnt_3,0)--  +nvl(d.cacc_cr_mv_amnt,0)\n                            -nvl(d.cacc_db_amnt_1,0)-nvl(d.cacc_db_amnt_2,0)\n                            -nvl(d.cacc_db_amnt_3,0)--  -nvl(d.cacc_db_mv_amnt,0)\n                            )*DV_CURR_RATE(substr(b.gbad_blocked_cacc,1,3),sysdate)/pack_cours.v_cours_tab(101), \n                          'DEV01479',\n                           user,\n                           sysdate\n                      from  bbsd_grtees_m a,\n                            bbsd_grtees_blk_accnts_d  b,\n                            bbsd_grtees_blk_accnts    c,\n                            bbsd_cust_accounts d\n                      where  a.grtm_sequence = c.grtm_sequence\n                         and a.grtm_sequence = b.grtm_sequence\n                         and b.gbad_blocked_cacc=d.cacc_num\n                         and b.gbad_blocked_brch=d.brch_code\n                         and a.GTYP_CODE = 20\n                         and db_accounts.cacc_num = c.gbla_cacc\n                         and db_accounts.brch_code = c.gbla_brch\n                         and (nvl(d.cacc_cr_amnt_1,0)+nvl(d.cacc_cr_amnt_2,0)\n                            +nvl(d.cacc_cr_amnt_3,0)--  +nvl(d.cacc_cr_mv_amnt,0)\n                            -nvl(d.cacc_db_amnt_1,0)-nvl(d.cacc_db_amnt_2,0)\n                            -nvl(d.cacc_db_amnt_3,0)--  -nvl(d.cacc_db_mv_amnt,0)\n                            )>0         -- Elia Added 3/12/2015\n                            );\n\n-- cash colateral outside module -- mail Khajag Tue 20/06/2017 3:08 PM\n/*\nDebtor GLs  Cash Collateral GLs\nGL 301  464100307\nGL 8021 and GL 8022 excluding (GL 802200655 and GL 802200656 )  464100297\n  464100298\n  464100301\n  464100302\n  464100305\n  464100306\n  464100331\n GL 8016 and GL 802200655 and GL 802200656  464100303\n  464100304\nGL 8011 and GL 8024                   464100315\n*/\n\nif substr(db_accounts.acnt_num,1,3) in ('301') \n  then\n      insert into dv_prorata_dev1479 \n              (dv_sequence,\n               brch_code,\n               cacc_num,\n               data_type,\n               cust_id,\n               curr_code,\n               actp_type,\n               amnt_org_curr,\n               amnt_cv_usd,\n               program_id,\n               user_id,\n               time_stamp) \n               (select distinct \n                       v_dv_sequence,\n                       d.brch_code,\n                       d.cacc_num, \n                       'ACC_COL_CASH', \n                       null, \n                       d.curr_code, \n                       d.actp_type, \n                       (nvl(d.cacc_cr_amnt_1,0)+nvl(d.cacc_cr_amnt_2,0)\n                        +nvl(d.cacc_cr_amnt_3,0)--  +nvl(d.cacc_cr_mv_amnt,0)\n                        -nvl(d.cacc_db_amnt_1,0)-nvl(d.cacc_db_amnt_2,0)\n                        -nvl(d.cacc_db_amnt_3,0)--  -nvl(d.cacc_db_mv_amnt,0)\n                        ), \n                       (nvl(d.cacc_cr_amnt_1,0)+nvl(d.cacc_cr_amnt_2,0)\n                        +nvl(d.cacc_cr_amnt_3,0)--  +nvl(d.cacc_cr_mv_amnt,0)\n                        -nvl(d.cacc_db_amnt_1,0)-nvl(d.cacc_db_amnt_2,0)\n                        -nvl(d.cacc_db_amnt_3,0)--  -nvl(d.cacc_db_mv_amnt,0)\n                        )*DV_CURR_RATE(d.curr_code,sysdate)/pack_cours.v_cours_tab(101), \n                       'DEV01479',\n                       user,\n                       sysdate\n                 from  bbsd_cust_accounts d\n                 where d.cust_id = db_accounts.cust_id\n                   and d.actp_type in (307));\nend if;\n\nif (substr(db_accounts.acnt_num,1,4) in ('8021','8022') and  db_accounts.acnt_num not in ('802200655','802200656'))\n  then\n      insert into dv_prorata_dev1479 \n              (dv_sequence,\n               brch_code,\n               cacc_num,\n               data_type,\n               cust_id,\n               curr_code,\n               actp_type,\n               amnt_org_curr,\n               amnt_cv_usd,\n               program_id,\n               user_id,\n               time_stamp) \n               (select distinct \n                       v_dv_sequence,\n                       d.brch_code,\n                       d.cacc_num, \n                       'ACC_COL_CASH', \n                       null, \n                       d.curr_code, \n                       d.actp_type, \n                       (nvl(d.cacc_cr_amnt_1,0)+nvl(d.cacc_cr_amnt_2,0)\n                        +nvl(d.cacc_cr_amnt_3,0)--  +nvl(d.cacc_cr_mv_amnt,0)\n                        -nvl(d.cacc_db_amnt_1,0)-nvl(d.cacc_db_amnt_2,0)\n                        -nvl(d.cacc_db_amnt_3,0)--  -nvl(d.cacc_db_mv_amnt,0)\n                        ), \n                       (nvl(d.cacc_cr_amnt_1,0)+nvl(d.cacc_cr_amnt_2,0)\n                        +nvl(d.cacc_cr_amnt_3,0)--  +nvl(d.cacc_cr_mv_amnt,0)\n                        -nvl(d.cacc_db_amnt_1,0)-nvl(d.cacc_db_amnt_2,0)\n                        -nvl(d.cacc_db_amnt_3,0)--  -nvl(d.cacc_db_mv_amnt,0)\n                        )*DV_CURR_RATE(d.curr_code,sysdate)/pack_cours.v_cours_tab(101), \n                       'DEV01479',\n                       user,\n                       sysdate\n                 from  bbsd_cust_accounts d\n                 where d.cust_id = db_accounts.cust_id\n                   and d.actp_type in (297,298,301,302,305,306,331));\nend if;\n\nif (substr(db_accounts.acnt_num,1,4) in ('8016') or  db_accounts.acnt_num in ('802200655','802200656'))\n  then\n      insert into dv_prorata_dev1479 \n              (dv_sequence,\n               brch_code,\n               cacc_num,\n               data_type,\n               cust_id,\n               curr_code,\n               actp_type,\n               amnt_org_curr,\n               amnt_cv_usd,\n               program_id,\n               user_id,\n               time_stamp) \n               (select distinct \n                       v_dv_sequence,\n                       d.brch_code,\n                       d.cacc_num, \n                       'ACC_COL_CASH', \n                       null, \n                       d.curr_code, \n                       d.actp_type, \n                       (nvl(d.cacc_cr_amnt_1,0)+nvl(d.cacc_cr_amnt_2,0)\n                        +nvl(d.cacc_cr_amnt_3,0)--  +nvl(d.cacc_cr_mv_amnt,0)\n                        -nvl(d.cacc_db_amnt_1,0)-nvl(d.cacc_db_amnt_2,0)\n                        -nvl(d.cacc_db_amnt_3,0)--  -nvl(d.cacc_db_mv_amnt,0)\n                        ), \n                       (nvl(d.cacc_cr_amnt_1,0)+nvl(d.cacc_cr_amnt_2,0)\n                        +nvl(d.cacc_cr_amnt_3,0)--  +nvl(d.cacc_cr_mv_amnt,0)\n                        -nvl(d.cacc_db_amnt_1,0)-nvl(d.cacc_db_amnt_2,0)\n                        -nvl(d.cacc_db_amnt_3,0)--  -nvl(d.cacc_db_mv_amnt,0)\n                        )*DV_CURR_RATE(d.curr_code,sysdate)/pack_cours.v_cours_tab(101), \n                       'DEV01479',\n                       user,\n                       sysdate\n                 from  bbsd_cust_accounts d\n                 where d.cust_id = db_accounts.cust_id\n                   and d.actp_type in (303,304));\nend if;\n\nif substr(db_accounts.acnt_num,1,4) in ('8011','8024')\n  then\n      insert into dv_prorata_dev1479 \n              (dv_sequence,\n               brch_code,\n               cacc_num,\n               data_type,\n               cust_id,\n               curr_code,\n               actp_type,\n               amnt_org_curr,\n               amnt_cv_usd,\n               program_id,\n               user_id,\n               time_stamp) \n               (select distinct \n                       v_dv_sequence,\n                       d.brch_code,\n                       d.cacc_num, \n                       'ACC_COL_CASH', \n                       null, \n                       d.curr_code, \n                       d.actp_type, \n                       (nvl(d.cacc_cr_amnt_1,0)+nvl(d.cacc_cr_amnt_2,0)\n                        +nvl(d.cacc_cr_amnt_3,0)--  +nvl(d.cacc_cr_mv_amnt,0)\n                        -nvl(d.cacc_db_amnt_1,0)-nvl(d.cacc_db_amnt_2,0)\n                        -nvl(d.cacc_db_amnt_3,0)--  -nvl(d.cacc_db_mv_amnt,0)\n                        ), \n                       (nvl(d.cacc_cr_amnt_1,0)+nvl(d.cacc_cr_amnt_2,0)\n                        +nvl(d.cacc_cr_amnt_3,0)--  +nvl(d.cacc_cr_mv_amnt,0)\n                        -nvl(d.cacc_db_amnt_1,0)-nvl(d.cacc_db_amnt_2,0)\n                        -nvl(d.cacc_db_amnt_3,0)--  -nvl(d.cacc_db_mv_amnt,0)\n                        )*DV_CURR_RATE(d.curr_code,sysdate)/pack_cours.v_cours_tab(101), \n                       'DEV01479',\n                       user,\n                       sysdate\n                 from  bbsd_cust_accounts d\n                 where d.cust_id = db_accounts.cust_id\n                   and d.actp_type in (315));\nend if;\n\n\n\n\n\n\n\n-- mortgage colateral\ninsert into dv_prorata_dev1479 \n            (dv_sequence,\n             brch_code,\n             cacc_num,\n             data_type,\n             cust_id,\n             curr_code,\n             actp_type,\n             amnt_org_curr,\n             amnt_cv_usd,\n             program_id,\n             user_id,\n             time_stamp)\n             (select distinct \n                     v_dv_sequence,\n                     900, -- for all mortgage colateral sequences\n                     a.grtm_sequence, \n                     'ACC_COL_HYPO', \n                     substr(c.gbla_cacc,7,7), \n                     e.CURR_CODE, \n                     null, \n                     --a.GRTM_AMOUNT, \n                     --a.GRTM_LC_AMOUNT/pack_cours.v_cours_tab(101),\n                     sum(e.GEEX_ESTM_VAL),\n                     sum(e.GEEX_LC_ESTM_VAL)/pack_cours.v_cours_tab(101),\n                    'DEV01479',\n                     user,\n                     sysdate\n                from  bbsd_grtees_m a,\n                      bbsd_grtees_blk_accnts    c,\n                      BBSD_GRTEES_ESTATE_EXPERTS_D  e\n                where  a.grtm_sequence = c.grtm_sequence\n                   and a.GTYP_CODE in (9,10,12)\n                   and db_accounts.cacc_num = c.gbla_cacc\n                   and db_accounts.brch_code = c.gbla_brch\n                   AND a.grtm_sequence     = e.grtm_sequence\n                   and nvl(e.GEEX_NEW_EST_FLG,1) = 1\n                 group by a.grtm_sequence,\n                          SUBSTR(c.gbla_cacc,7,7),\n                          e.CURR_CODE\n                      );\n                            \n\n-- cash colateral kafalat\ninsert into dv_prorata_dev1479 \n            (dv_sequence,\n             brch_code,\n             cacc_num,\n             data_type,\n             cust_id,\n             curr_code,\n             actp_type,\n             amnt_org_curr,\n             amnt_cv_usd,\n             program_id,\n             user_id,\n             time_stamp)  \n             (select distinct \n                           v_dv_sequence,\n                           b.gbad_blocked_brch,  \n                           b.gbad_blocked_cacc, \n                           'ACC_COL_KAF_C', \n                           null, \n                           substr(b.gbad_blocked_cacc,1,3), \n                           substr(b.gbad_blocked_cacc,4,3), \n                           (nvl(d.cacc_cr_amnt_1,0)+nvl(d.cacc_cr_amnt_2,0)\n                            +nvl(d.cacc_cr_amnt_3,0)--  +nvl(d.cacc_cr_mv_amnt,0)\n                            -nvl(d.cacc_db_amnt_1,0)-nvl(d.cacc_db_amnt_2,0)\n                            -nvl(d.cacc_db_amnt_3,0)--  -nvl(d.cacc_db_mv_amnt,0)\n                            ), \n                           (nvl(d.cacc_cr_amnt_1,0)+nvl(d.cacc_cr_amnt_2,0)\n                            +nvl(d.cacc_cr_amnt_3,0)--  +nvl(d.cacc_cr_mv_amnt,0)\n                            -nvl(d.cacc_db_amnt_1,0)-nvl(d.cacc_db_amnt_2,0)\n                            -nvl(d.cacc_db_amnt_3,0)--  -nvl(d.cacc_db_mv_amnt,0)\n                            )*DV_CURR_RATE(substr(b.gbad_blocked_cacc,1,3),sysdate)/pack_cours.v_cours_tab(101), \n                           'DEV01479',\n                           user,\n                           sysdate\n                      from  bbsd_grtees_m a,\n                            bbsd_grtees_blk_accnts_d  b,\n                            bbsd_grtees_blk_accnts    c,\n                            bbsd_cust_accounts d\n                    where  a.grtm_sequence = c.grtm_sequence\n                       and a.grtm_sequence = b.grtm_sequence\n                       and b.gbad_blocked_cacc=d.cacc_num\n                       and b.gbad_blocked_brch=d.brch_code\n                       and a.GTYP_CODE = 65\n                       and (nvl(d.cacc_cr_amnt_1,0)+nvl(d.cacc_cr_amnt_2,0)\n                            +nvl(d.cacc_cr_amnt_3,0)--  +nvl(d.cacc_cr_mv_amnt,0)\n                            -nvl(d.cacc_db_amnt_1,0)-nvl(d.cacc_db_amnt_2,0)\n                            -nvl(d.cacc_db_amnt_3,0)--  -nvl(d.cacc_db_mv_amnt,0)\n                            ) > 0          -- Elia Added 3/12/2015\n                       and db_accounts.cacc_num = c.gbla_cacc\n                       and db_accounts.brch_code = c.gbla_brch);\n\nif db_accounts.actp_type in (047,048,272,274,096,366) \n  then\n      insert into dv_prorata_dev1479 \n              (dv_sequence,\n               brch_code,\n               cacc_num,\n               data_type,\n               cust_id,\n               curr_code,\n               actp_type,\n               amnt_org_curr,\n               amnt_cv_usd,\n               program_id,\n               user_id,\n               time_stamp) \n               (select distinct \n                       v_dv_sequence,\n                       d.brch_code,\n                       d.cacc_num, \n                       'ACC_COL_KAF_G', \n                       null, \n                       d.curr_code, \n                       d.actp_type, \n                       (nvl(d.cacc_cr_amnt_1,0)+nvl(d.cacc_cr_amnt_2,0)\n                        +nvl(d.cacc_cr_amnt_3,0)--  +nvl(d.cacc_cr_mv_amnt,0)\n                        -nvl(d.cacc_db_amnt_1,0)-nvl(d.cacc_db_amnt_2,0)\n                        -nvl(d.cacc_db_amnt_3,0)--  -nvl(d.cacc_db_mv_amnt,0)\n                        ), \n                       (nvl(d.cacc_cr_amnt_1,0)+nvl(d.cacc_cr_amnt_2,0)\n                        +nvl(d.cacc_cr_amnt_3,0)--  +nvl(d.cacc_cr_mv_amnt,0)\n                        -nvl(d.cacc_db_amnt_1,0)-nvl(d.cacc_db_amnt_2,0)\n                        -nvl(d.cacc_db_amnt_3,0)--  -nvl(d.cacc_db_mv_amnt,0)\n                        )*DV_CURR_RATE(d.curr_code,sysdate)/pack_cours.v_cours_tab(101), \n                       'DEV01479',\n                       user,\n                       sysdate\n                 from  bbsd_cust_accounts d\n                 where d.cust_id = db_accounts.cust_id\n                   and d.actp_type in (750,748));\n\ninsert into dv_prorata_dev1479 \n              (dv_sequence,\n               brch_code,\n               cacc_num,\n               data_type,\n               cust_id,\n               curr_code,\n               actp_type,\n               amnt_org_curr,\n               amnt_cv_usd,\n               program_id,\n               user_id,\n               time_stamp)  \n               (select distinct \n                       v_dv_sequence,\n                       d.brch_code,  \n                       d.cacc_num, \n                       'ACC_KAF_UNPD', \n                       null, \n                       d.curr_code, \n                       d.actp_type, \n                       (nvl(d.cacc_cr_amnt_1,0)+nvl(d.cacc_cr_amnt_2,0)\n                        +nvl(d.cacc_cr_amnt_3,0)--  +nvl(d.cacc_cr_mv_amnt,0)\n                        -nvl(d.cacc_db_amnt_1,0)-nvl(d.cacc_db_amnt_2,0)\n                        -nvl(d.cacc_db_amnt_3,0)--  -nvl(d.cacc_db_mv_amnt,0)\n                        ), \n                       (nvl(d.cacc_cr_amnt_1,0)+nvl(d.cacc_cr_amnt_2,0)\n                        +nvl(d.cacc_cr_amnt_3,0)--  +nvl(d.cacc_cr_mv_amnt,0)\n                        -nvl(d.cacc_db_amnt_1,0)-nvl(d.cacc_db_amnt_2,0)\n                        -nvl(d.cacc_db_amnt_3,0)--  -nvl(d.cacc_db_mv_amnt,0)\n                        )*DV_CURR_RATE(d.curr_code,sysdate)/pack_cours.v_cours_tab(101), \n                       'DEV01479',\n                       user,\n                       sysdate\n                  from  bbsd_cust_accounts d\n                  where d.cust_id = db_accounts.cust_id\n                    and d.curr_code = db_accounts.curr_code\n                    and d.actp_type in (044,196));\n\n          end if;\n\n-- Unpaid CB Home , Pro +, PRET ECO FRIENDLY and others\ninsert into dv_prorata_dev1479 \n              (dv_sequence,\n               brch_code,\n               cacc_num,\n               data_type,\n               cust_id,\n               curr_code,\n               actp_type,\n               amnt_org_curr,\n               amnt_cv_usd,\n               program_id,\n               user_id,\n               time_stamp)  \n               (select distinct \n                       v_dv_sequence,\n                       d.brch_code,  \n                       d.cacc_num, \n                       'ACC_UNPD', \n                       null, \n                       d.curr_code, \n                       d.actp_type, \n                       (nvl(d.cacc_cr_amnt_1,0)+nvl(d.cacc_cr_amnt_2,0)\n                        +nvl(d.cacc_cr_amnt_3,0)--  +nvl(d.cacc_cr_mv_amnt,0)\n                        -nvl(d.cacc_db_amnt_1,0)-nvl(d.cacc_db_amnt_2,0)\n                        -nvl(d.cacc_db_amnt_3,0)--  -nvl(d.cacc_db_mv_amnt,0)\n                        ), \n                       (nvl(d.cacc_cr_amnt_1,0)+nvl(d.cacc_cr_amnt_2,0)\n                        +nvl(d.cacc_cr_amnt_3,0)--  +nvl(d.cacc_cr_mv_amnt,0)\n                        -nvl(d.cacc_db_amnt_1,0)-nvl(d.cacc_db_amnt_2,0)\n                        -nvl(d.cacc_db_amnt_3,0)--  -nvl(d.cacc_db_mv_amnt,0)\n                        )*DV_CURR_RATE(d.curr_code,sysdate)/pack_cours.v_cours_tab(101), \n                       'DEV01479',\n                       user,\n                       sysdate\n                 from  bbsd_cust_accounts d,\n                   ( \n                   select regexp_substr('10,364,489,268,248,188,242,426,194,193,255,269,322,43,230,204,266,328,300,410,405,409,191,244,192,122,189,258,247,187,254,270,252,236,253,184,186,382,184,186,382,490,494,416,519,532','[^,]+', 1, level) actp_type,\n                        regexp_substr('224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,232,232,232,202,202,202,493,493,398,224,224','[^,]+', 1, level) unp_actp_type\n                  from dual\n                     connect by level <47\n          )  up\n                  where d.cust_id = db_accounts.cust_id\n                    and d.curr_code = db_accounts.curr_code\n                    and d.actp_type = up.unp_actp_type\n                    and up.actp_type = db_accounts.actp_type);\n\n-- Unpaid ILO\ninsert into dv_prorata_dev1479 \n              (dv_sequence,\n               brch_code ,\n               cacc_num  ,\n               data_type  ,\n               cust_id   ,\n               curr_code   ,\n               actp_type     ,\n               amnt_org_curr  ,\n               amnt_cv_usd      ,\n               program_id     ,\n               user_id        ,\n               time_stamp      )  \n               (select distinct \n                       v_dv_sequence,\n                       d.brch_code,  \n                       d.cacc_num, \n                       'ACC_UNPD', \n                       null, \n                       d.curr_code, \n                       d.actp_type, \n                       (nvl(d.cacc_cr_amnt_1,0)+nvl(d.cacc_cr_amnt_2,0)\n                        +nvl(d.cacc_cr_amnt_3,0)--  +nvl(d.cacc_cr_mv_amnt,0)\n                        -nvl(d.cacc_db_amnt_1,0)-nvl(d.cacc_db_amnt_2,0)\n                        -nvl(d.cacc_db_amnt_3,0)--  -nvl(d.cacc_db_mv_amnt,0)\n                        ), \n                       (nvl(d.cacc_cr_amnt_1,0)+nvl(d.cacc_cr_amnt_2,0)\n                        +nvl(d.cacc_cr_amnt_3,0)--  +nvl(d.cacc_cr_mv_amnt,0)\n                        -nvl(d.cacc_db_amnt_1,0)-nvl(d.cacc_db_amnt_2,0)\n                        -nvl(d.cacc_db_amnt_3,0)--  -nvl(d.cacc_db_mv_amnt,0)\n                        )*DV_CURR_RATE(d.curr_code,sysdate)/pack_cours.v_cours_tab(101), \n                       'DEV01479',\n                       user,\n                       sysdate\n                  from  bbsd_cust_accounts d,\n                   (select distinct   \n                           M.BRCH_CODE, \n                           M.CURR_CODE, \n                            P.ilop_unp_type   ilop_unp_type \n                      from bbrd_ilo_infos_m  M,\n                           BBRP_ILO_PRODUCTS  P\n                      where ilom_brch_code =db_accounts.brch_code \n                         and  ilom_cacc_num =db_accounts.cacc_num\n                         and  M.ilop_code =P.ilop_code )  up\n                  where d.brch_code = up.BRCH_CODE\n                    and d.CURR_CODE = up.CURR_CODE\n                    and d.actp_type = up.ilop_unp_type\n                    and up.ilop_unp_type not in (251,249)\n                    and d.cust_id = db_accounts.cust_id\n                    and d.curr_code = db_accounts.curr_code);\n       \n-- Unpaid Discounted bills\n  \ninsert into dv_prorata_dev1479 \n              (dv_sequence,\n               brch_code,\n               cacc_num,\n               data_type,\n               cust_id,\n               curr_code,\n               actp_type,\n               amnt_org_curr,\n               amnt_cv_usd,\n               program_id,\n               user_id,\n               time_stamp)  \n               (select distinct \n                             v_dv_sequence,\n                             d.brch_code,  \n                             d.cacc_num, \n                             'ACC_UNPD', \n                             null, \n                             d.curr_code, \n                             d.actp_type, \n                             (nvl(d.cacc_cr_amnt_1,0)+nvl(d.cacc_cr_amnt_2,0)\n                              +nvl(d.cacc_cr_amnt_3,0)--  +nvl(d.cacc_cr_mv_amnt,0)\n                              -nvl(d.cacc_db_amnt_1,0)-nvl(d.cacc_db_amnt_2,0)\n                              -nvl(d.cacc_db_amnt_3,0)--  -nvl(d.cacc_db_mv_amnt,0)\n                              ), \n                             (nvl(d.cacc_cr_amnt_1,0)+nvl(d.cacc_cr_amnt_2,0)\n                              +nvl(d.cacc_cr_amnt_3,0)--  +nvl(d.cacc_cr_mv_amnt,0)\n                              -nvl(d.cacc_db_amnt_1,0)-nvl(d.cacc_db_amnt_2,0)\n                              -nvl(d.cacc_db_amnt_3,0)--  -nvl(d.cacc_db_mv_amnt,0)\n                              )*DV_CURR_RATE(d.curr_code,sysdate)/pack_cours.v_cours_tab(101), \n                             'DEV01479',\n                             user,\n                             sysdate\n                       from  bbsd_cust_accounts d,\n                             (select distinct     \n                                     M.brch_code  ,\n                                     substr(M.cacc_num,1,3)   curr_code,\n                                     PT.DBTP_UNPD_TYPE   \n                                from bbrd_discounted_bills_m  M,\n                                     BBRP_DBI_TYPE_PRMS       PT\n                               where M.brch_code =db_accounts.brch_code \n                                 and M.cacc_num =db_accounts.cacc_num \n                                 and PT.DBTP_ACTP_TYPE =substr(M.cacc_num,4,3)   )  up\n                    where d.brch_code = up.brch_code\n                      and d.curr_code = up.curr_code\n                      and d.actp_type = up.DBTP_UNPD_TYPE\n                    and d.cust_id = db_accounts.cust_id\n                    and d.curr_code = db_accounts.curr_code\n                      );\n  \n-- Global limit           \ninsert into dv_prorata_dev1479 \n              (dv_sequence,\n               brch_code,\n               cacc_num,\n               data_type,\n               cust_id,\n               curr_code,\n               actp_type,\n               amnt_org_curr,\n               amnt_cv_usd,\n               program_id,\n               user_id,\n               time_stamp)  \n               (select distinct \n                       v_dv_sequence,\n                       decode(instr(A.g_limit,'|',1,3)-instr(A.g_limit,'|',1,4),-1,0,1),  \n                       nvl(to_number(substr(a.g_limit,instr(A.g_limit,'|',1,5)+1)) ,db_accounts.cacc_num), \n                       'ACC_LIMIT', \n                       null, \n                       to_number(substr(a.g_limit,\n                       (instr(a.g_limit,'|',1,1)+1),\n                        (instr(a.g_limit,'|',1,2)-instr(a.g_limit,'|',1,1)-1))) Curr, \n                       db_accounts.actp_type, \n                       to_number(substr(a.g_limit,1,\n                         (instr(a.g_limit,'|',1,1)-1)))   Amnt, \n                       to_number(substr(a.g_limit,\n                       (instr(a.g_limit,'|',1,2)+1),\n                        (instr(a.g_limit,'|',1,3)-instr(a.g_limit,'|',1,2)-1)))/pack_cours.v_cours_tab(101), \n                       'DEV01479',\n                       user,\n                       sysdate\n                  from(select dv_get_global_limit(db_accounts.brch_code,\n                                                  db_accounts.cacc_num,\n                                                  sysdate,\n                                                  db_accounts.CR_LIMIT,\n                                                  pack_cours.v_cours_tab(db_accounts.curr_code),\n                                                  1) g_limit\n                          from dual) A);\n\n-- Fill the rest of the info\n--///////////////////////////////////////////////////////////////////////////   \n\n\n    v_count_over7  := 0;\n    v_count_over30 := 0;\n    v_count_over60 := 0;\n    v_count_over90 := 0;\n\n    --Check if has global limit     \n    select decode(instr(A.g_limit,'|',1,3)-instr(A.g_limit,'|',1,4),-1,0,1)   \n      into v_global_limit                   \n      from (select dv_get_global_limit(db_accounts.brch_code,\n                                       db_accounts.cacc_num,\n                                       null,\n                                       null,\n                                       null) g_limit\n              from dual) A;\n    -- check if loan acc.\n    select count(*)\n        into v_ilom_flag\n        from bbrd_ilo_infos_m m\n        where m.ilom_brch_code = db_accounts.brch_code\n          and m.ilom_cacc_num = db_accounts.cacc_num;\n\n--  Facility Average Outstanding Amount \n\nv_total_amount:=0;\nv_total_amount_usd:=0;\nv_date:=last_day(trunc(sysdate,'YEAR'));\nv_count:=0;\n\n    while v_date <= trunc(sysdate,'DD') \n    loop\n      begin\n      select eomb_avg_accnt_bal_mtd,\n             eomb_avg_accnt_bal_mtd*eomb_rate/v_usd_rate--round(sum(eomb_avg_accnt_bal_mtd)/count(eomb_avg_accnt_bal_mtd) ,3)\n        into  v_average_outstanding_amount,\n              v_avg_outstanding_amount_usd\n        from  bbsd_eom_balances b\n        where b.eomb_date = v_date --> trunc(sysdate,'YEAR')\n            and cacc_num=db_accounts.cacc_num\n            and brch_code=db_accounts.brch_code    \n            and b.eomb_acc_ind=1 \n            and curr_code=db_accounts.curr_code;\n\n      v_total_amount      :=  v_total_amount+v_average_outstanding_amount;\n      v_total_amount_usd  :=  v_total_amount_usd+v_avg_outstanding_amount_usd;\n      v_count             :=  v_count+1; \n      v_date              :=  last_day(v_date+1); \n\n  exception when others then\n      v_average_outstanding_amount:=0;\n      v_avg_outstanding_amount_usd:=0;\n      v_date:=last_day(v_date+1); \n  end;\n\n end loop;\n\n  select  v_total_amount/decode(v_count,0,1,v_count), \n          v_total_amount_usd/decode(v_count,0,1,v_count)\n    into  v_average_outstanding_amount,\n          v_avg_outstanding_amount_usd\n    from dual;\n\n--  Taux % - interest rate\n  select dv_cal_taux('D',db_accounts.brch_code,db_accounts.cacc_num,sysdate)\n    into v_cal_taux\n    from dual;\n\n-- Fees amount\n\n\n\nbegin\n  \nselect       round(sum(nvl(decode(h_gl.HTRS_DC,'C',h_gl.htrs_amount,-h_gl.htrs_amount),0)),2)       amount_in_org_cur,\n             round(sum(nvl(decode(h_gl.HTRS_DC,'C',h_gl.htrs_amount,-h_gl.htrs_amount),0)\n             *pack_cours.v_cours_tab(substr(db_accounts.cacc_num,1,3))\n                   /pack_cours.v_cours_tab(101)),2)      amount_in_usd  \n            \n          into v_fees_amnt,\n             v_fees_amnt_usd\n\n           from bbsd_hist_transactions  h_gl,\n           \n                (  select HH1.Trsh_Operation_Date,\n                          HH1.TRSH_NUM ,\n                          HH1.HTRS_DC ,\n                          HH1.HTRS_SEQUENCE,\n                          min(HH1.HTRS_LINE)  HTRS_LINE\n                     from bbsd_hist_transactions   HH1\n                    where HH1.htrs_acc_ind = 1  \n                      and HH1.htrs_brch_code = db_accounts.brch_code\n                      and HH1.htrs_cacc_num = db_accounts.cacc_num\n                      and HH1.trsh_operation_date between add_months(SYSDATE,-12) and sysdate\n                     -- and HH1.Trsh_Operation_Date between to_date('28-01-2014','dd/mm/rrrr') \n                    --  and to_date('28-04-2014','dd/mm/rrrr') \n                   group by HH1.Trsh_Operation_Date,\n                          HH1.TRSH_NUM ,\n                          HH1.HTRS_DC ,\n                          HH1.HTRS_SEQUENCE )  HH\n           \n           \n           \n          where h_gl.HTRS_SEQUENCE =HH.HTRS_SEQUENCE \n            and h_gl.HTRS_LINE   between  HH.HTRS_LINE -20 and  HH.HTRS_LINE +20 \n            and h_gl.TRSH_NUM     = HH.TRSH_NUM   \n            and h_gl.TRSH_OPERATION_DATE  = HH.TRSH_OPERATION_DATE \n            and h_gl.htrs_acc_ind = 2  \n            and h_gl.CURR_CODE     = substr(db_accounts.cacc_num,1,3)\n            and h_gl.HTRS_DC = decode(HH.HTRS_DC,'C','D','D','C')\n            and ((h_gl.htrs_cacc_num  between  710000000  and  719999999)\n              or (h_gl.htrs_cacc_num  between  389000000  and  389999999)\n              or (h_gl.htrs_cacc_num  between  776100000  and  776199999)) ;\n                   \n                   exception when others then\n            v_fees_amnt:=0;\n            v_fees_amnt_usd:=0;\n            end;\n\n\n\n\n\n\n-- add information\nbegin\n\n  select z.lim_org_curr,z.lim_loc_curr\n    into cbk_limit,cbk_limit_usd\n  from (\n    select blimcr lim_org_curr,\n           blimcv/v_usd_rate lim_loc_curr,\n           bdate, \n           rownum r\n    from bbsd_cbkbals\n     where bcacc=db_accounts.cacc_num \n       and breff='BAL'\n       and bbrch=db_accounts.brch_code\n       and nvl(bcust,0)>0\n    order by 3 desc) z\n    where z.r=1;\n\nexception when others then\n  cbk_limit:=0;\n  cbk_limit_usd:=0;\nend;\n\n-- db_accounts.Facility_Tenor  for ILO and discounted bills\nbegin\n  select max(dbid_bill_maturity) - sysdate +1\n    into  v_facility_tenor\n    from   bbrd_discounted_bills_m m,\n           bbrd_discounted_bills_d d\n     where m.cacc_num=db_accounts.cacc_num\n        and m.brch_code=db_accounts.brch_code\n        and m.dbim_remittance_ref = d.dbim_remittance_ref;\n\n  if v_facility_tenor is null then\n    select max(ilod_bill_mtr) - sysdate +1\n      into  v_facility_tenor\n      from   bbrd_ilo_infos_m  m,\n             bbrd_ilo_infos_d  d\n       where m.ilom_cacc_num=db_accounts.cacc_num\n          and m.ilom_brch_code=db_accounts.brch_code\n          and m.ilom_sequence = d.ilom_sequence;\n  end if;\n\n  if v_facility_tenor is null then\n    v_facility_tenor := db_accounts.facility_tenor;\n  end if;\n  \n  if v_facility_tenor < 0 then\n    v_facility_tenor := null;\n  end if;\n  \nexception when others then\n  null;\nend;\n\n-- calculate Max delay days\n\n  v_MAX_DELAY_DAYS := 0;\n    \n\n    if  v_global_limit = 1 then \n        \n      DV_MAX_DELAY_DAYS_Global( db_accounts.brch_code,\n                                    db_accounts.cacc_num,\n                                    v_date_du,\n                                    v_date_au,\n                                    v_MAX_DELAY_DAYS);\n        if v_MAX_DELAY_DAYS>355 then\n          DV_MAX_DELAY_DAYS_Global( db_accounts.brch_code,\n                                        db_accounts.cacc_num,\n                                        v_date_du-365,\n                                        v_date_au,\n                                        v_MAX_DELAY_DAYS);\n        end if;       \n        if v_MAX_DELAY_DAYS>355*2 then\n          DV_MAX_DELAY_DAYS_Global( db_accounts.brch_code,\n                                        db_accounts.cacc_num,\n                                        v_date_du-365*2,\n                                        v_date_au,\n                                        v_MAX_DELAY_DAYS);\n        end if;        \n        if v_MAX_DELAY_DAYS>355*3 then\n          DV_MAX_DELAY_DAYS_Global( db_accounts.brch_code,\n                                        db_accounts.cacc_num,\n                                        v_date_du-365*4,\n                                        v_date_au,\n                                        v_MAX_DELAY_DAYS);\n        end if;       \n     elsif v_ilom_flag = 0 then                              \n      -- if not loan account\n           DV_MAX_DELAY_DAYS_CBK(db_accounts.brch_code,\n                            db_accounts.cacc_num,\n                            v_date_du,\n                            v_date_au,\n                            v_MAX_DELAY_DAYS);\n            if v_MAX_DELAY_DAYS>360 then\n             DV_MAX_DELAY_DAYS_CBK(db_accounts.brch_code,\n                            db_accounts.cacc_num,\n                            v_date_du-365,\n                            v_date_au,\n                            v_MAX_DELAY_DAYS); \n            end if;       \n            if v_MAX_DELAY_DAYS>360*2 then\n             DV_MAX_DELAY_DAYS_CBK(db_accounts.brch_code,\n                            db_accounts.cacc_num,\n                            v_date_du-365*2,\n                            v_date_au,\n                            v_MAX_DELAY_DAYS); \n            end if;   \n            if v_MAX_DELAY_DAYS>360*3 then\n             DV_MAX_DELAY_DAYS_CBK(db_accounts.brch_code,\n                            db_accounts.cacc_num,\n                            v_date_du-365*4,\n                            v_date_au,\n                            v_MAX_DELAY_DAYS); \n            end if;           \n      --Count_Over_Limit_011(db_accounts.brch_code,db_accounts.cacc_num,v_date_du,v_date_au,v_count_over7,v_count_over30,v_count_over60,v_count_over90);      \n        else\n          select max(floor(nvl(decode(d.ilsb_code,6,sysdate,4,d.ilod_paid_date,d.ilod_bill_mtr),sysdate)-d.ilod_bill_mtr))\n           into v_MAX_DELAY_DAYS\n           from bbrd_ilo_infos_m m,\n                bbrd_ilo_infos_d d\n          where m.ilom_brch_code = db_accounts.brch_code\n            and m.ilom_cacc_num  = db_accounts.cacc_num\n            and m.ilom_sequence  = d.ilom_sequence\n           and d.ilod_bill_mtr between v_date_du and v_date_au\n            and nvl(d.ilod_bill_mnt,0) <> 0\n            and d.ILOD_PAY_NATURE <>2;\n          if v_MAX_DELAY_DAYS < 0 then\n            v_MAX_DELAY_DAYS := 0;\n          end if;\n          if v_MAX_DELAY_DAYS > 330 then  -- Added for delays greater than 1 year - Elia 11/4/2017\n            select max(floor(nvl(decode(d.ilsb_code,6,sysdate,4,d.ilod_paid_date,d.ilod_bill_mtr),sysdate)-d.ilod_bill_mtr))\n             into v_MAX_DELAY_DAYS\n             from bbrd_ilo_infos_m m,\n                  bbrd_ilo_infos_d d\n            where m.ilom_brch_code = db_accounts.brch_code\n              and m.ilom_cacc_num  = db_accounts.cacc_num\n              and m.ilom_sequence  = d.ilom_sequence\n             and d.ilod_bill_mtr between v_date_du-365 and v_date_au\n              and nvl(d.ilod_bill_mnt,0) <> 0\n              and d.ILOD_PAY_NATURE <>2;\n          end if;\n          if v_MAX_DELAY_DAYS > 330*2 then\n            select max(floor(nvl(decode(d.ilsb_code,6,sysdate,4,d.ilod_paid_date,d.ilod_bill_mtr),sysdate)-d.ilod_bill_mtr))\n             into v_MAX_DELAY_DAYS\n             from bbrd_ilo_infos_m m,\n                  bbrd_ilo_infos_d d\n            where m.ilom_brch_code = db_accounts.brch_code\n              and m.ilom_cacc_num  = db_accounts.cacc_num\n              and m.ilom_sequence  = d.ilom_sequence\n             and d.ilod_bill_mtr between v_date_du-365*2 and v_date_au\n              and nvl(d.ilod_bill_mnt,0) <> 0\n              and d.ILOD_PAY_NATURE <>2;\n          end if;\n          if v_MAX_DELAY_DAYS > 330*3 then\n            select max(floor(nvl(decode(d.ilsb_code,6,sysdate,4,d.ilod_paid_date,d.ilod_bill_mtr),sysdate)-d.ilod_bill_mtr))\n             into v_MAX_DELAY_DAYS\n             from bbrd_ilo_infos_m m,\n                  bbrd_ilo_infos_d d\n            where m.ilom_brch_code = db_accounts.brch_code\n              and m.ilom_cacc_num  = db_accounts.cacc_num\n              and m.ilom_sequence  = d.ilom_sequence\n             and d.ilod_bill_mtr between v_date_du-364*4 and v_date_au\n              and nvl(d.ilod_bill_mnt,0) <> 0\n              and d.ILOD_PAY_NATURE <>2;\n          end if;\n        end if;\n    \n    if nvl(v_MAX_DELAY_DAYS,0) <= 0 then\n      v_MAX_DELAY_DAYS := 0;\n    end if;\n    \n  -- Mail August 16, 2017 2:50 PM      \n  --  Off-balance sheet accounts of the report (GLs 8011, 8016,8021,8022,8024, and 899900993) are requested by Credit Risk Management to have their number of delay days of to be equal to zero.\n\n      if substr(db_accounts.acnt_num,1,4) in ('8011','8016','8021','8022','8024') then \n        v_MAX_DELAY_DAYS := 0;\n      end if;\n\n      if db_accounts.acnt_num ='899900993' then \n        v_MAX_DELAY_DAYS := 0;\n      end if;\n\n      if db_accounts.actp_type =155 then \n        v_MAX_DELAY_DAYS := 0;\n      end if;\n\n\n-- Max delay days for last 5 years as requested by BDL and andre\n\n\n  v_MAX_DELAY_DAYS_5_YEARS := 0;\n    \n\n    if  v_global_limit = 1 then \n        \n      Dv_MAX_DELAY_DAYS_Global( db_accounts.brch_code,\n                                    db_accounts.cacc_num,\n                                    v_date_du-365*2,--  -365*4 for 5 years\n                                    v_date_au,\n                                    v_MAX_DELAY_DAYS_5_YEARS);\n     elsif v_ilom_flag = 0 then                              \n      -- if not loan account\n           DV_MAX_DELAY_DAYS_CBK(db_accounts.brch_code,\n                            db_accounts.cacc_num,\n                            v_date_du-365*2,\n                            v_date_au,\n                            v_MAX_DELAY_DAYS_5_YEARS);\n        else\n          select max(floor(nvl(decode(d.ilsb_code,6,sysdate,4,d.ilod_paid_date,d.ilod_bill_mtr),sysdate)-d.ilod_bill_mtr))\n           into v_MAX_DELAY_DAYS_5_YEARS\n           from bbrd_ilo_infos_m m,\n                bbrd_ilo_infos_d d\n          where m.ilom_brch_code = db_accounts.brch_code\n            and m.ilom_cacc_num  = db_accounts.cacc_num\n            and m.ilom_sequence  = d.ilom_sequence\n           and d.ilod_bill_mtr between v_date_du-365*2 and v_date_au\n            and nvl(d.ilod_bill_mnt,0) <> 0\n            and d.ILOD_PAY_NATURE <>2;\n          if v_MAX_DELAY_DAYS_5_YEARS < 0 then\n            v_MAX_DELAY_DAYS_5_YEARS := 0;\n          end if;\n        end if;\n  \n    if nvl(v_MAX_DELAY_DAYS_5_YEARS,0) <= 0 then\n      v_MAX_DELAY_DAYS_5_YEARS := 0;\n    end if;\n    \n  -- Mail August 16, 2017 2:50 PM      \n  --  Off-balance sheet accounts of the report (GLs 8011, 8016,8021,8022,8024, and 899900993) are requested by Credit Risk Management to have their number of delay days of to be equal to zero.\n\n      if substr(db_accounts.acnt_num,1,4) in ('8011','8016','8021','8022','8024') then \n        v_MAX_DELAY_DAYS_5_YEARS := 0;\n      end if;\n\n      if db_accounts.acnt_num ='899900993' then \n        v_MAX_DELAY_DAYS_5_YEARS := 0;\n      end if;\n\n      if db_accounts.actp_type =155 then \n        v_MAX_DELAY_DAYS_5_YEARS := 0;\n      end if;\n\n\n\n--   Days of Delays – at the reporting date\n\n  v_DELAY_DAYS_AT_REP_DATE := 0;\n\n    if  v_global_limit = 1 then \n        \n      DV_CURR_DELAY_DAYS_Global( db_accounts.brch_code,\n                                    db_accounts.cacc_num,\n                                    v_date_du,\n                                    v_date_au,\n                                    v_DELAY_DAYS_AT_REP_DATE);\n     elsif v_ilom_flag = 0 then                              \n      -- if not loan account\n           DV_CURR_DELAY_DAYS_CBK(db_accounts.brch_code,\n                            db_accounts.cacc_num,\n                            v_date_du,\n                            v_date_au,\n                            v_DELAY_DAYS_AT_REP_DATE);\n        else\n          select max(floor(nvl(decode(d.ilsb_code,6,sysdate,4,d.ilod_paid_date,d.ilod_bill_mtr),sysdate)-d.ilod_bill_mtr))\n           into v_DELAY_DAYS_AT_REP_DATE\n           from bbrd_ilo_infos_m m,\n                bbrd_ilo_infos_d d\n          where m.ilom_brch_code = db_accounts.brch_code\n            and m.ilom_cacc_num  = db_accounts.cacc_num\n            and m.ilom_sequence  = d.ilom_sequence\n           and d.ilod_bill_mtr between v_date_du and v_date_au\n            and nvl(d.ilod_bill_mnt,0) <> 0\n            and d.ilsb_code = 6   --  And Still upaied to get the current\n            and d.ILOD_PAY_NATURE <>2;\n          if v_DELAY_DAYS_AT_REP_DATE < 0 then\n            v_DELAY_DAYS_AT_REP_DATE := 0;\n          end if;\n        end if;\n  \n    if nvl(v_DELAY_DAYS_AT_REP_DATE,0) <= 0 then\n      v_DELAY_DAYS_AT_REP_DATE := 0;\n    end if;\n\n  -- Mail August 16, 2017 2:50 PM      \n  --  Off-balance sheet accounts of the report (GLs 8011, 8016,8021,8022,8024, and 899900993) are requested by Credit Risk Management to have their number of delay days of to be equal to zero.\n\n      if substr(db_accounts.acnt_num,1,4) in ('8011','8016','8021','8022','8024') then \n        v_DELAY_DAYS_AT_REP_DATE := 0;\n      end if;\n\n      if db_accounts.acnt_num ='899900993' then \n        v_DELAY_DAYS_AT_REP_DATE := 0;\n      end if;\n\n      if db_accounts.actp_type =155 then \n        v_DELAY_DAYS_AT_REP_DATE := 0;\n      end if;\n\n-- Fix\n\n      if v_MAX_DELAY_DAYS >360 then \n        v_DELAY_DAYS_AT_REP_DATE := v_MAX_DELAY_DAYS;\n      end if;\n\n\n\n--1.  Count/Frequency: is requested to count the number of times(sequences) the facility was in the range of \n--    highest number of delay days during the year(report date-1year). \n\nif v_MAX_DELAY_DAYS <= 30 then \n    v_MIN_DELAY  := 1;\n    v_MAX_DELAY  := 30;\nelsif v_MAX_DELAY_DAYS between 31 and 60 then \n    v_MIN_DELAY  := 31;\n    v_MAX_DELAY  := 60;\nelsif v_MAX_DELAY_DAYS between 61 and 90 then \n    v_MIN_DELAY  := 61;\n    v_MAX_DELAY  := 90;\nelsif v_MAX_DELAY_DAYS > 90  then \n    v_MIN_DELAY  := 91;\n    v_MAX_DELAY  := 9999;\nend if; \n\n  v_DELAY_DAYS_Frequency := 0;\n\nif v_MAX_DELAY_DAYS > 0 then  -- no delays =  v_DELAY_DAYS_Frequency is zero\n    if  v_global_limit = 1 then \n        \n      DV_FREQ_DELAY_DAYS_Global( db_accounts.brch_code,\n                                    db_accounts.cacc_num,\n                                    v_date_du,\n                                    v_date_au,\n                                    v_MIN_DELAY,\n                                    v_MAX_DELAY ,\n                                    v_DELAY_DAYS_Frequency);\n     elsif v_ilom_flag = 0 then                              \n      -- if not loan account\n           DV_FREQ_DELAY_DAYS_CBK(db_accounts.brch_code,\n                            db_accounts.cacc_num,\n                            v_date_du,\n                            v_date_au,\n                            v_MIN_DELAY,\n                            v_MAX_DELAY ,\n                            v_DELAY_DAYS_Frequency);\n      else\n        \n        DV_FREQ_DELAY_DAYS_ILO( db_accounts.brch_code,\n                                    db_accounts.cacc_num,\n                                    v_date_du,\n                                    v_date_au,\n                                    v_MIN_DELAY,\n                                    v_MAX_DELAY ,\n                                    v_DELAY_DAYS_Frequency);\n        \n        /*\n         select count(*)\n           into v_DELAY_DAYS_Frequency\n           from bbrd_ilo_infos_m m,\n                bbrd_ilo_infos_d d\n          where m.ilom_brch_code = db_accounts.brch_code\n            and m.ilom_cacc_num  = db_accounts.cacc_num\n            and m.ilom_sequence  = d.ilom_sequence\n            and d.ilod_bill_mtr between v_date_du and v_date_au\n            and nvl(d.ilod_bill_mnt,0) <> 0\n          --  and d.ilsb_code = 6   --  And Still upaied to get the current\n            and d.ILOD_PAY_NATURE <>2\n            and floor(nvl(decode(d.ilsb_code,6,sysdate,4,d.ilod_paid_date,d.ilod_bill_mtr),sysdate)-d.ilod_bill_mtr) between v_MIN_DELAY and v_MAX_DELAY \n            and not exists ( select 1 from  bbrd_ilo_infos_d dd\n                              where m.ilom_sequence  = dd.ilom_sequence \n                                and d.ilod_bill_mtr > dd.ilod_bill_mtr\n                                and dd.ilod_paid_date > dd.ilod_bill_mtr)\n            ;\n            */\n      end if;\n  end if;     \n      if nvl(v_DELAY_DAYS_Frequency,0) <= 0 then\n        v_DELAY_DAYS_Frequency := 0;\n      end if;    \n      if nvl(v_DELAY_DAYS_Frequency,0) = 0 and nvl(v_MAX_DELAY_DAYS,0) > 0 then\n        v_DELAY_DAYS_Frequency := 0;\n      end if;\n  \n  -- Mail August 16, 2017 2:50 PM      \n  --  Off-balance sheet accounts of the report (GLs 8011, 8016,8021,8022,8024, and 899900993) are requested by Credit Risk Management to have their number of delay days of to be equal to zero.\n\n      if substr(db_accounts.acnt_num,1,4) in ('8011','8016','8021','8022','8024') then \n        v_DELAY_DAYS_Frequency := 0;\n      end if;\n\n      if db_accounts.acnt_num ='899900993' then \n        v_DELAY_DAYS_Frequency := 0;\n      end if;\n\n      if db_accounts.actp_type =155 then \n        v_DELAY_DAYS_Frequency := 0;\n      end if;\n\n--3.  Conditional Days of Delay: is requested to be calculated based on the count/frequency column and the days of delays. \n\nif v_MAX_DELAY_DAYS <= 30 then \n    v_DELAY_DAYS_CONDITIONED  := v_MAX_DELAY_DAYS;\nelsif v_MAX_DELAY_DAYS between 31 and 60 then \n  if v_DELAY_DAYS_Frequency <= 2 and v_DELAY_DAYS_AT_REP_DATE <= 30 then\n    v_DELAY_DAYS_CONDITIONED  := v_DELAY_DAYS_AT_REP_DATE;\n  elsif v_DELAY_DAYS_Frequency <= 2 and v_DELAY_DAYS_AT_REP_DATE > 30 then\n    v_DELAY_DAYS_CONDITIONED  := v_MAX_DELAY_DAYS;\n  else\n    v_DELAY_DAYS_CONDITIONED  := v_MAX_DELAY_DAYS;\n  end if;\nelsif v_MAX_DELAY_DAYS between 61 and 90 then \n    v_DELAY_DAYS_CONDITIONED  := v_MAX_DELAY_DAYS;\nelsif v_MAX_DELAY_DAYS > 90  then \n  if v_DELAY_DAYS_AT_REP_DATE <= 90 then\n    v_DELAY_DAYS_CONDITIONED  := 90;\n  else\n    v_DELAY_DAYS_CONDITIONED  := v_MAX_DELAY_DAYS;\n  end if;\nend if; \n\n    if nvl(v_DELAY_DAYS_CONDITIONED,0) <= 0 then\n      v_DELAY_DAYS_CONDITIONED := 0;\n    end if;\n\n--  Insert data...\n\ninsert into dv_dev01479 (\n            dv_sequence,  \n            cust_id  ,\n            brch_code  ,\n            cacc_num ,\n            actp_type,\n            actp_desc,\n            curr_code,\n            date_outstanding    ,\n            average_outstanding   ,\n            average_outstanding_usd ,\n            interest_rate,\n            comm_rate,\n            fees_amnt,\n            fees_amnt_usd,\n            num_defaults_over_7_days,\n            num_defaults_over_30_days,\n            num_defaults_over_60_days,\n            num_defaults_over_90_days,\n            losses_defaults_over_one_year ,\n            facility_tenor,\n            financial_instrument_curr_code ,\n            financial_instrument_value_usd ,\n            customer_category,\n            facility_risk_rating,\n            program_id,\n            user_id,\n            time_stamp,\n            MAX_DELAY_DAYS,\n            MAX_DELAY_DAYS_5_YEARS ,\n            DELAY_DAYS_Frequency  ,\n            DELAY_DAYS_AT_REP_DATE ,\n            DELAY_DAYS_CONDITIONED  )\n      values(     \n            v_dv_sequence,\n            db_accounts.cust_id,\n            db_accounts.brch_code,  \n            db_accounts.cacc_num, \n            db_accounts.actp_type,\n            db_accounts.actp_desc,\n            db_accounts.curr_code, \n            sysdate,  --   -1  DATE_OUTSTANDING    ,\n            v_average_outstanding_amount,\n            v_avg_outstanding_amount_usd,\n            v_cal_taux           ,\n            db_accounts.Comm_rate  ,\n            v_fees_amnt,\n            v_fees_amnt_usd,\n            v_count_over7,\n            v_count_over30,\n            v_count_over60,\n            v_count_over90,\n            null,--LOSSES_DEFAULTS_OVER_ONE_YEAR ,\n            v_Facility_Tenor ,\n            null, --FINANCIAL_INSTRUMENT_CURR_CODE ,\n            null, --FINANCIAL_INSTRUMENT_VALUE_USD ,\n            all_customers.man_by,\n            null,--FACILITY_RISK_RATING,\n            'DEV01479',\n            user,\n            sysdate,\n            v_MAX_DELAY_DAYS,\n            v_MAX_DELAY_DAYS_5_YEARS ,\n            v_DELAY_DAYS_Frequency  ,\n            v_DELAY_DAYS_AT_REP_DATE ,\n            v_DELAY_DAYS_CONDITIONED );\n            \n            \n\nend loop;\n\nno_message('commit_form');  \n\n\nend loop;\n\n\nDV_PROGRAM_LOG('end of loop');\n\ndv_pro_prorata();\n--alert_mess ( 'Done', 'note');\n\n\nexception when others then\n    alert_mess ( sqlcode || '  ' || substr(sqlerrm,1,200), 'note');\n    \n     DV_PROGRAM_LOG('error in DV_PROCESSING acc:'||v_error_log_acc||' '|| sqlcode || '  ' || substr(sqlerrm,1,200));\nend;\n\n/*\n\n  s_dest_name := 'Data_Dev01479';\n\n\n  s_entete := 'Obligor ID|Name|Branch|Account No.|Facility Currency|Facility Type Code|Acc. Desc|Curr|Facility Authorized Amount|Facility Outstanding Amount|Date of Outstanding|'\n            ||'Collateral Currency |Facility Collateral Code|Collateral Amount|Col acc num|Financial Instrument Curr|Financial Instrument Value USD|'\n            ||'Facility Average Outstanding Amount|Average Outstanding USD|Profit/Interest Charged%|Fee Amount|Fees Amount USD|Nbr Defaults over 7 days|'\n            ||'Nbr Defaults over 30 days|Nbr Defaults over 60 days|Number of defaults over one year|'\n            ||'Losses from defaults over one year %|Facility Tenor (Days)|Third Party Guarrantee Risk Rating|Managed By|Man By Group Name|Customer classification|Customer classification description|Fee Amount Currency|Customer Category|';\n\n\n Cmd_Line := 'Select FACILITY.CUST_ID||''|''||\n                     CC.cust_b_name||''|''||\n                     BB.BRCH_CODE||''|''||\n                     BB.CACC_NUM||''|''||\n                     BB.CURR_CODE||''|''||\n                     BB.ACTP_TYPE||''|''||\n                     bb.ACTP_DESC||''|''||\n                     bb.CURR_CODE||''|''||\n                     (select  nvl(sum(nvl(X.AMNT_CV_USD,0)),0)\n                        from  DV_PRORATA_DEV1479  X\n                       where  X.DV_SEQUENCE   =  BB.DV_SEQUENCE \n                         and X.BRCH_CODE = FACILITY.BRCH_CODE\n                         and X.CACC_NUM  = FACILITY.CACC_NUM \n                         and X.DATA_TYPE     =  ''P_ACC_LIMIT'')||''|''||\n                     FACILITY.AMNT_CV_USD||''|''||\n                     bb.DATE_OUTSTANDING||''|''||   \n                     ACC_COL.CURR_CODE||''|''||  \n                     ACC_COL.DATA_TYPE||''|''||    \n                     ACC_COL.AMNT_CV_USD||''|''||\n                     ACC_COL.BRCH_CODE||'' ''||        \n                     ACC_COL.CACC_NUM ||''|''||\n                     bb.FINANCIAL_INSTRUMENT_CURR_CODE||''|''||\n                     bb.FINANCIAL_INSTRUMENT_VALUE_USD||''|''||\n                     bb.AVERAGE_OUTSTANDING           ||''|''||\n                     bb.AVERAGE_OUTSTANDING_USD       ||''|''|| \n                     bb.INTEREST_RATE                 ||''|''||\n                     bb.FEES_AMNT                     ||''|''||\n                     bb.FEES_AMNT_USD                 ||''|''||\n                     bb.NUM_DEFAULTS_OVER_7_DAYS      ||''|''|| \n                     bb.NUM_DEFAULTS_OVER_30_DAYS     ||''|''|| \n                     bb.NUM_DEFAULTS_OVER_60_DAYS     ||''|''|| \n                     bb.NUM_DEFAULTS_OVER_90_DAYS     ||''|''|| \n                     bb.LOSSES_DEFAULTS_OVER_ONE_YEAR ||''|''||\n                     bb.FACILITY_TENOR                ||''|''||\n                     bb.FACILITY_RISK_RATING          ||''|''||\n                     dv_get_managed_by(bb.cust_id,2)  ||''|''||\n                     dv_get_managed_by(bb.cust_id,3)  ||''|''||\n                     CC.CCLS_CODE                     ||''|''||\n                     (select CCLS_B_DESC\n                       from  BBSC_CR_CLASSES s\n                       where s.ccls_code=CC.CCLS_CODE)||''|''||\n                     bb.CURR_CODE                     ||''|''|| \n                     bb.CUSTOMER_CATEGORY             ||''|''\n                     \n              from  DV_DEV01479          BB,     \n                    BBSD_CUSTOMERS       CC,\n                    DV_PRORATA_DEV1479      FACILITY ,\n                    (Select * from DV_PRORATA_DEV1479\n                     where DATA_TYPE in (''P_ACC_COL_CASH'',''P_ACC_COL_KAF_C'',''P_ACC_COL_KAF_G''))      ACC_COL\n              where FACILITY.DV_SEQUENCE   =  BB.DV_SEQUENCE \n                and BB.CUST_ID  =  CC.CUST_ID\n                and FACILITY.DV_SEQUENCE   =  ACC_COL.DV_SEQUENCE(+)\n                and FACILITY.DATA_TYPE     =  ''P_FACILITY''\n                and ACC_COL.BRCH_CODE(+) = FACILITY.BRCH_CODE\n                and ACC_COL.CACC_NUM(+)  = FACILITY.CACC_NUM \n             order by FACILITY.CUST_ID,FACILITY.BRCH_CODE,FACILITY.CACC_NUM,ACC_COL.DATA_TYPE';\n                \n\n\n  dv_Log_file(Cmd_Line);\n  dv_Excel_File(S_Dest_Name,Cmd_Line,s_entete);\n\n  dv_sync_file('C:\\Icbs\\It_Dev\\modele\\'||Modele_Excel);\n\n  -- get file from server \n\n  -- run excel macro\n\n  -- :s_result := f_result;\n\n  -- Client_Host( 'mkdir c:\\Icbs',No_Screen);\n  -- Client_Host( 'mkdir c:\\Icbs\\It_Dev',No_Screen);\n\n -- Copy text file to user pc\n -- dv_sync_file('C:\\Icbs\\It_Dev\\Data_Dev01479.txt');\n\n -- synchronize all macros and excel model files on the user pc with the server\n -- dv_sync_file('C:\\Icbs\\It_Dev\\modele\\Macro_DEV01479.xls');\n\n -- start the macro at client\n  FBean.Register_Bean('block_rep.bean',1,'oracle.forms.dv.ReadReg');  \n  V_excel_path := FBean.Invoke_char('block_rep.bean',1,'ReadFrom','\"xls\"');\n\n-- asynchronous\n  FBean.Invoke('block_rep.bean',1,'ShellS','\"'||V_excel_path||' %'||'C:\\Icbs\\It_Dev\\modele\\'||Modele_Excel||'% \"'); \n\n<<end_prog>>\n\n  :Please_Wait := 'Finished'; \n  Synchronize;   \n \n\nexception when others then\n    alert_mess ( 'ERROR brch:'||error_BRCH_CODE||' acc:'||error_CACC_NUM||' - '||sqlcode || '  ' || substr(sqlerrm,1,200), 'note');\nend; \n\n */",
					"settings":
					{
						"buffer_size": 63210,
						"line_ending": "Windows"
					}
				},
				{
					"file": "/C/Users/Elia_harmouche/AppData/Local/Microsoft/Windows/INetCache/Content.Outlook/TZXRKF2W/anastasia sql.sql",
					"settings":
					{
						"buffer_size": 1294,
						"line_ending": "Windows"
					}
				},
				{
					"contents": "\n\nDEV01839\n\n\n",
					"settings":
					{
						"buffer_size": 13,
						"line_ending": "Windows"
					}
				},
				{
					"contents": "PROCEDURE DV_FREQ_DELAY_DAYS_ILO(\n    p_brch_code      IN VARCHAR2,\n    p_cacc_num       IN VARCHAR2,\n    p_date_du        IN DATE,\n    p_date_au        IN DATE,\n    p_MIN_DELAY             in number,\n    p_MAX_DELAY             in number,\n    p_FREQ_DELAY_DAYS        in out number)\nIS\n  v_days          NUMBER(4) :=0;\n  v_flag          NUMBER(1) :=0;\n  v_count         NUMBER(3) :=0;\n  v_date_over     DATE      := sysdate;\n  v_date_under    DATE      := sysdate;\n  v_max_days      NUMBER(4) :=0;\n  v_Limit_amnt    NUMBER(18,3);\n  v_Limit_Curr    NUMBER(3);\n  v_Limit_amnt_CV NUMBER(18,3);\n  v_facility_code NUMBER(5);\n  v_facility_desc VARCHAR2(80);\n  V_limit         NUMBER(18,3);\n  V_rate          NUMBER(14,5);\n  v_CRLN_SEQUENCE NUMBER(9);\n  v_FREQ_days  number(4) :=0; \nBEGIN\n  BEGIN\n    FOR c_cursor3 IN\n    (SELECT L.bdate op_date,\n      L.BMBAL v_solde,\n      L.BBAL v_limitEOM\n    FROM bbsd_cbkbals@oradw L\n    WHERE L.bdate BETWEEN p_date_du AND p_date_au\n    AND L.breff   = 'CRLN'\n    AND L.bcust   = SUBSTR(p_cacc_num,7,7)\n    AND L.brefnbr = v_CRLN_SEQUENCE\n    ORDER BY L.bdate ASC\n\n\n       select d.ilod_bill_mtr   op_date,\n             \n             (select sum(nvl(dd.ILOD_BILL_MNT,0))\n                from bbrd_ilo_infos_d dd\n               where dd.ilom_sequence  = d.ilom_sequence\n                 and dd.ilod_bill_mtr <= d.ilod_bill_mtr\n                 and d.ILOD_PAY_NATURE <>2)  v_solde, -- Due,\n                 \n             (select sum(nvl(dd.ILOD_PAID_MNT,0))\n                from bbrd_ilo_infos_d dd\n               where dd.ilom_sequence  = d.ilom_sequence\n                 and nvl(dd.ilod_paid_date,trunc(sysdate,'DD')) <= d.ilod_bill_mtr\n                 and d.ILOD_PAY_NATURE <>2)   v_limitEOM --paid,\n             \n             nvl(d.ilod_paid_date,trunc(sysdate,'DD')) paid_date\n\n             \n           from bbrd_ilo_infos_m m,\n                bbrd_ilo_infos_d d\n          where m.ilom_brch_code = p_brch_code\n            and m.ilom_cacc_num  = p_cacc_num\n            and m.ilom_sequence  = d.ilom_sequence\n           and d.ilod_bill_mtr between p_date_du and p_date_au\n            and nvl(d.ilod_bill_mnt,0) <> 0\n          --  and d.ilsb_code = 6   --  And Still upaied to get the current\n            and d.ILOD_PAY_NATURE <>2\n       --     and floor(nvl(decode(d.ilsb_code,6,sysdate,4,d.ilod_paid_date,d.ilod_bill_mtr),sysdate)-d.ilod_bill_mtr) between :v_MIN_DELAY and :v_MAX_DELAY \n    order by  d.ilod_bill_mtr  ASC\n    \n\n    )\n    LOOP\n      --if c_cursor3.v_solde + c_cursor3.v_limitEOM<0 -- Is over limit?\n      IF NVL(c_cursor3.v_limitEOM,0) - NVL(c_cursor3.v_solde,0) <0 -- Is over limit?\n        THEN\n        IF v_flag=0 -- wasn't over limit but is now\n          THEN\n          v_date_over:=c_cursor3.op_date;\n          v_flag     :=1; -- FLAG OVER LIMIT\n        ELSE -- was already over limit\n         NULL;\n         -- v_max_days := 0;\n          --exit;\n        END IF;\n      ELSE           -- not over limit\n        IF v_flag =0 -- wasn't over limit initially\n          THEN\n          null;\n          --v_max_days := 0;\n          --exit;\n        ELSE    -- was over limit beforehand\n          v_date_under := c_cursor3.paid_date ;\n          v_max_days       := v_date_under - v_date_over; --calculate days he stayed over limit\n          -- to count the frequency    \n          if v_max_days between p_MIN_DELAY and p_MAX_DELAY then\n            v_FREQ_days  := v_FREQ_days +1;\n          end if;\n          v_flag     :=2; -- FLAG OVER LIMIT\n          exit;              \n        END IF;\n      END IF;\n    END LOOP;\n    IF v_flag       =1 THEN\n      v_max_days       := sysdate - v_date_over;\n      -- to count the frequency    \n      if v_max_days between p_MIN_DELAY and p_MAX_DELAY then\n        v_FREQ_days  := v_FREQ_days +1;\n      end if;\n    END IF;\n  END;\n  p_FREQ_DELAY_DAYS := v_FREQ_days;\nEXCEPTION\nWHEN OTHERS THEN\n  alert_mess ( SQLCODE || '  ' || SUBSTR(sqlerrm,1,200), 'note');\nEND;\n",
					"settings":
					{
						"buffer_size": 3947,
						"line_ending": "Windows"
					}
				},
				{
					"contents": "\n\n\n    @XmlElement(name = \"HashedCardNumber\")\n    protected String hashedCardNumber;\n    @XmlElement(name = \"UniqueCardClientNumber\")\n    protected String uniqueCardClientNumber;\n    @XmlElement(name = \"EffectiveDate\", required = true)\n    @XmlSchemaType(name = \"dateTime\")\n    protected XMLGregorianCalendar effectiveDate;\n    @XmlElement(name = \"ExpiryDate\", required = true)\n    @XmlSchemaType(name = \"dateTime\")\n    protected XMLGregorianCalendar expiryDate;\n    @XmlElement(name = \"CardStatus\")\n    protected String cardStatus;\n    @XmlElement(name = \"CardLevel\")\n    protected String cardLevel;\n    @XmlElement(name = \"CardType\")\n    protected String cardType;\n    @XmlElement(name = \"AvailableAmount\")\n    protected double availableAmount;\n    @XmlElement(name = \"CurrentAmount\")\n    protected double currentAmount;\n    @XmlElement(name = \"CurrencyCode\")\n    protected String currencyCode;\n    @XmlElement(name = \"LimitAmount\")\n    protected double limitAmount;\n\n                V_card.setUniqueCardClientNumber(rs.getString(\"UniqueCardClientNumber\"));\n\n\nHashedCardNumber\nUniqueCardClientNumber\n                V_card.setEffectiveDate(rs.getString(\"EffectiveDate\"));       \n                V_card.setExpiryDate(rs.getString(\"ExpiryDate\"));       \n                V_card.setCardStatus(rs.getString(\"CardStatus\"));       \n                V_card.setCardLevel(rs.getString(\"CardLevel\"));       \n                V_card.setCardType(rs.getString(\"CardType\"));       \n                V_card.setAvailableAmount(rs.getString(\"AvailableAmount\"));       \n                V_card.setCurrentAmount(rs.getString(\"CurrentAmount\"));       \n                V_card.setCurrencyCode(rs.getString(\"CurrencyCode\"));       \n                V_card.setLimitAmount(rs.getString(\"LimitAmount\"));       \n\n\nt\nProperties\n\n    transactions: required (object)\n        settlementAmount: required (number)\n        The settlement amount\n        merchantCity: required (string)\n        The city of the merchant\n        merchantName: required (string)\n        The name of the merchant involved in the transaction\n        settlementCurrency: required (string - pattern: ^\\d{3}$)\n        The currency code of the settlement amount\n        merchantCountry: required (string)\n        The country of the merchant\n        transactionAmount: required (number)\n        The amount that was affected by the transaction\n        issuingCurrency: required (string - pattern: ^\\d{3}$)\n        The issuing currency code\n        transactionCurrency: required (string - pattern: ^\\d{3}$)\n        The currency code of the transaction amount\n        transactionType: required (string - pattern: ^\\d{3}$)\n        The type of transaction carried out\n        transactionDate: required (string - pattern: ^\\d{8}$)\n        The date in yyyyMMdd format, during which the transaction was done\n        accountAmount: required (number)\n        The transaction account amount\n        authCode: required (number)\n        The authorization code related to the transaction\n        transactionCategory: required (string)\n        The transaction category\n\n\n    \"clearedTransactions\": [\n        {\n            \"authCode\": \"239761\",\n            \"issuingCurrency\": \"840\",\n            \"accountAmount\": \"991.94\",\n            \"merchantName\": \"CRBAR01/ATM\",\n            \"merchantCity\": \"AIN EL REMMAN\",\n            \"merchantCountry\": \"422\",\n            \"settlementAmount\": \"1480000\",\n            \"settlementCurrency\": \"422\",\n            \"transactionAmount\": \"1480000\",\n            \"transactionCurrency\": \"422\",\n            \"transactionDate\": \"20171002\",\n            \"transactionCategory\": \"001\",\n            \"transactionType\": \"009\",\n            \"accountNumber\": \"00060626001\"\n\n\nsetSettlementAmount(double value) \n    public void setSettmenentCurrency(String value) \n    public void setMerchantCity(String value) {\n    public void setMerchantName(String value) {\n    public void setMerchantCountry(String value) {\n    public void setTransactionAmount(double value) {\n    public void setIssuingCurrency(String value) {\n    public void setTransactionCurrency(String value) {\n    public void setTransactionType(String value) {\n    public void setTransactionDate(XMLGregorianCalendar value) {\n    public void setAccountAmount(double value) {\n    public void setAuthCode(double value) {\n    public void setTransactionCategory(String value) {",
					"settings":
					{
						"buffer_size": 4361,
						"line_ending": "Windows"
					}
				},
				{
					"file": "/C/javaApp/webBanking3/webBanking3.log",
					"settings":
					{
						"buffer_size": 13058,
						"line_ending": "Unix"
					}
				},
				{
					"contents": "\n\n/*\n * To change this license header, choose License Headers in Project Properties.\n * To change this template file, choose Tools | Templates\n * and open the template in the editor.\n */\npackage com.creditbank;\n\nimport static com.itdev.looyaclient.LooyaClient.log;\nimport java.io.IOException;\nimport okhttp3.OkHttpClient;\nimport okhttp3.Request;\nimport okhttp3.Response;\nimport okhttp3.FormBody;\nimport okhttp3.RequestBody;\nimport org.json.*;\n\n/**\n *\n * @author elia_harmouche\n */\npublic class okhttp3lib {\n\n    private OkHttpClient client = new OkHttpClient();\n\n    public String GetLogin(String server, String user, String password) throws IOException {\n        String v_token = \"\";\n        Request request = new Request.Builder()\n                .url(\"http://\" + server + \"/LSP/Integration/login.action?loginUserName=\" + user + \"&loginPassword=\" + password)\n                .get()\n                .addHeader(\"cache-control\", \"no-cache\")\n                .build();\n\n        try (Response response = client.newCall(request).execute()) {\n            String resStr = response.body().string().toString();\n            log.debug(\"GetLogin: \" + resStr);\n            JSONObject Jobject = new JSONObject(resStr);\n            JSONArray Jarray = Jobject.getJSONArray(\"Data\");\n            for (int i = 0; i < Jarray.length(); i++) {\n                JSONObject object = Jarray.getJSONObject(i);\n                v_token = object.getString(\"authToken\");\n            }\n        } catch (Exception e) {\n            log.error(\"Error GetLogin: \" + e.toString());\n        }\n        return v_token;\n    }\n\n    public LooyaRequest GetAccounts(String server, String token, String customer_id) throws IOException {\n        LooyaRequest v_LooyaRequest = new LooyaRequest();\n        Request request = new Request.Builder()\n                .url(\"http://\" + server + \"/LSP/Integration/accounts.action?cb=\" + token + \"&customer_id=\" + customer_id)\n                .get()\n                .addHeader(\"cache-control\", \"no-cache\")\n                .build();\n\n        try (Response response = client.newCall(request).execute()) {\n            String resStr = response.body().string().toString();\n            log.debug(\"GetAccounts: \" + resStr);\n            JSONObject Jobject = new JSONObject(resStr);\n            JSONArray Jarray = Jobject.getJSONArray(\"Data\");\n            LooyaIdentifier v_Identifier = new LooyaIdentifier();\n            for (int i = 0; i < Jarray.length(); i++) {\n                JSONObject object = Jarray.getJSONObject(i);\n                v_Identifier.ALLOW_DEBIT = String.valueOf(object.getBoolean(\"allowDebit\"));\n                v_Identifier.IDENTIFIER_NUMBER = object.getString(\"identifier_number\");\n                v_Identifier.PURSE_ID = String.valueOf(object.getLong(\"purse_id\"));\n                v_Identifier.CUST_ID = object.getString(\"account_id\");\n                v_Identifier.BALANCE_AMOUNT = String.valueOf(object.getBigDecimal(\"balance\"));\n                v_Identifier.RESERVED_AMOUNT = String.valueOf(object.getBigDecimal(\"reserved_amount\"));\n                v_Identifier.ALLOW_CREDIT = String.valueOf(object.getBoolean(\"allowCredit\"));\n                v_Identifier.DESCRIPTION = object.getString(\"description\");\n                v_LooyaRequest.Identifiers.add(v_Identifier);\n            }\n            v_LooyaRequest.STATUS_FLAG = \"1\";\n        } catch (Exception e) {\n            log.error(\"Error GetAccounts: \" + e.toString());\n            v_LooyaRequest.STATUS_FLAG = \"-1\";\n        }\n        return v_LooyaRequest;\n    }\n\n    public LooyaRequest PostRedeem(String server, String token, String customer_id, String amount, String purseId) throws IOException {\n        LooyaRequest v_LooyaRequest = new LooyaRequest();\n        String v_transactionId = \"\";\n        String V_Resp_Commit_bal = \"\";\n        Request request = new Request.Builder()\n                .url(\"http://\" + server + \"/LSP/Integration/redeem.action?cb=\" + token + \"&customerId=\" + customer_id + \"&amount=\" + amount + \"&purseId=\" + purseId)\n                .get()\n                .addHeader(\"cache-control\", \"no-cache\")\n                .build();\n\n        /* post method\n        FormBody.Builder formBuilder = new FormBody.Builder()\n                .add(\"customerId\", \"123\");\n\n        // dynamically add more parameter like this:\n        formBuilder.add(\"amount\", \"000000\");\n        formBuilder.add(\"purseId\", \"000000\");\n        \n        RequestBody formBody = formBuilder.build();\n\n        Request request = new Request.Builder()\n                .url(\"https://aaa.com\")\n                .post(formBody)\n                .build();\n\n        OkHttpClient client = new OkHttpClient();\n         */\n        try (Response response = client.newCall(request).execute()) {\n            String resStr = response.body().string().toString();\n            log.debug(\"PostRedeem: \" + resStr);\n            JSONObject Jobject = new JSONObject(resStr);\n            v_transactionId = String.valueOf(Jobject.getJSONArray(\"Data\").getJSONObject(0).getNumber(\"transactionId\"));\n            V_Resp_Commit_bal = this.PostCommit(server, token, v_transactionId);\n            v_LooyaRequest.BALANCE_AMOUNT = V_Resp_Commit_bal;\n            v_LooyaRequest.STATUS_FLAG = \"1\";\n        } catch (Exception e) {\n            log.error(\"Error PostRedeem: \" + e.toString());\n            V_Resp_Commit_bal = this.PostRollback(server, token, v_transactionId);\n            v_LooyaRequest.BALANCE_AMOUNT = V_Resp_Commit_bal;\n            v_LooyaRequest.STATUS_FLAG = \"-1\";\n        }\n        return v_LooyaRequest;\n    }\n\n    public String PostCommit(String server, String token, String transactionId) throws IOException {\n        String v_balance = \"\";\n        Request request = new Request.Builder()\n                .url(\"http://\" + server + \"/LSP/Integration/commit.action?cb=\" + token + \"&transactionId=\" + transactionId)\n                .get()\n                .addHeader(\"cache-control\", \"no-cache\")\n                .build();\n\n        try (Response response = client.newCall(request).execute()) {\n            String resStr = response.body().string().toString();\n            log.debug(\"PostCommit: \" + resStr);\n            JSONObject Jobject = new JSONObject(resStr);\n            v_balance = String.valueOf(Jobject.getJSONArray(\"Data\").getJSONObject(0).getJSONArray(\"balances\").getJSONObject(0).getNumber(\"balance\"));\n        } catch (Exception e) {\n            log.error(\"Error PostCommit: \" + e.toString());\n            v_balance = \"error\";\n        }\n        return v_balance;\n    }\n\n    public String PostRollback(String server, String token, String transactionId) throws IOException {\n        String v_balance = \"\";\n        Request request = new Request.Builder()\n                .url(\"http://\" + server + \"/LSP/Integration/rollback.action?cb=\" + token + \"&transactionId=\" + transactionId)\n                .get()\n                .addHeader(\"cache-control\", \"no-cache\")\n                .build();\n\n        try (Response response = client.newCall(request).execute()) {\n            String resStr = response.body().string().toString();\n            log.debug(\"PostRollback: \" + resStr);\n            JSONObject Jobject = new JSONObject(resStr);\n            v_balance = String.valueOf(Jobject.getJSONArray(\"Data\").getJSONObject(0).getJSONArray(\"balances\").getJSONObject(0).getNumber(\"balance\"));\n        } catch (Exception e) {\n            log.error(\"Error PostRollback: \" + e.toString());\n            v_balance = \"error\";\n        }\n        return v_balance;\n    }\n\n}\n\n\n",
					"settings":
					{
						"buffer_size": 7488,
						"line_ending": "Windows"
					}
				}
			],
			"build_system": "",
			"build_system_choices":
			[
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 490.0,
				"last_filter": "Package Control: ",
				"selected_items":
				[
					[
						"Package Control: ",
						"Package Control: Install Package"
					],
					[
						"git",
						"Git: Quick Commit (current file)"
					],
					[
						"Package Control",
						"Package Control: Install Package"
					]
				],
				"width": 741.0
			},
			"console":
			{
				"height": 162.0,
				"history":
				[
					"git_quick_commit",
					"git commit",
					"commit",
					"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
					"Package Control;",
					"Package Control",
					"Package Control: Install Package"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"file_history":
			[
				"/X/Documents/Mohamed/Tuition Fees/DV_TUITIONS_FEES_ACNTS.sql",
				"/X/Documents/Elia/sql/Desktop/Contract printing/New Text Document.txt",
				"/X/Documents/Elia/sql/Desktop/Contract printing/CARD KFS APR from table.sql",
				"/X/Documents/Elia/sql/Desktop/Marie Car dealers commitions.sql",
				"/X/Documents/Elia/sql/Desktop/ebanking CSC cards/CSC defs.txt",
				"/X/Documents/Elia/sql/Desktop/Areeba automation/areeba automation.sql",
				"/C/javaApp/webBanking3/sql/CSCgetCards.sql",
				"/C/javaApp/webBanking3/sql/CSCgetCardDetails.sql",
				"/C/javaApp/webBanking3/webBanking3.log",
				"/C/Users/elia_harmouche/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.Outlook/X5J9Q58V/SelectCust.txt",
				"/C/javaApp/webBanking3/sql/SelectAcc.sql",
				"/C/javaApp/glassfish501b/glassfish/domains/domain1/logs/server.log",
				"/X/Documents/Elia/sql/Desktop/Areeba automation/CREDIT_BANK_USD.TXT",
				"/C/Program Files (x86)/Privoxy/config.txt",
				"/X/Documents/Elia/sql/Desktop/Profitability/Prof Corp SME.sql",
				"/C/Users/elia_harmouche/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.Outlook/X5J9Q58V/TO_SOLVE.txt",
				"/X/Documents/Elia/sql/Desktop/Factoring/Factoring table.sql",
				"/X/Documents/Elia/sql/Retail Loans interface/Retail Loan Applications.sql",
				"/X/Documents/Elia/sql/Desktop/Georges Moubarak account officers.sql",
				"/X/Documents/Elia/sql/Desktop/Factoring/Factoring table.txt",
				"/C/javaApp/webBanking3/sql/SelectTrans.sql",
				"/X/Documents/Elia/sql/Desktop/Transfers online 24 7/ATM procedures updated.sql",
				"/C/Users/elia_harmouche/AppData/Local/Temp/7zO8861F7E6/OTPCodes.txt",
				"/X/java/NetBeans8/webBanking3/sql/SelectTrans.sql",
				"/X/Documents/Elia/sql/Desktop/Transfers online 24 7/DV_EBANKING_TRANSFER_RES.sql",
				"/C/Users/elia_harmouche/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.Outlook/X5J9Q58V/trCrdb-MCU180508_DET.txt",
				"/C/Users/elia_harmouche/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.Outlook/X5J9Q58V/trCrdb-MCU180509_DET.txt",
				"/C/javaApp/webBanking3/config.properties",
				"/C/javaApp/glassfish5/glassfish/domains/domain1/logs/server.log",
				"/X/Documents/Elia/sql/Desktop/ebanking CSC cards/CSC defs",
				"/X/Documents/Elia/sql/Desktop/Myriam CDR Financial Instruments.sql",
				"/C/icbs/CRDBD051003_nonFin.txt",
				"/C/javaApp/photoflow/logs/PhotoFlow.log",
				"/C/Users/elia_harmouche/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.Outlook/X5J9Q58V/CREDIT_BANK_USD.TXT",
				"/X/java/NetBeans8/webBanking3/sql/SelectWedAccIban.sql",
				"/X/Documents/Elia/sql/Desktop/ILO_accounting balance Marie Formula.sql",
				"/C/Users/elia_harmouche/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.Outlook/X5J9Q58V/gladyss.sql",
				"/C/Users/elia_harmouche/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.Outlook/X5J9Q58V/loans.txt",
				"/C/javaApp/PF2/logs/PhotoFlow.log",
				"/C/javaApp/PF2/target/logs/PhotoFlow.log",
				"/X/Documents/Elia/sql/Desktop/Profitability/Prof CFD data.sql",
				"/X/Documents/Elia/sql/Desktop/Profitability/Profitability.sql",
				"/C/Users/elia_harmouche/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.Outlook/X5J9Q58V/trCrdb-MCU180310_DET.TXT",
				"/X/Documents/Elia/sql/Desktop/Cynthia Tanios physicals.sql",
				"/X/Documents/Elia/sql/Desktop/Transfers online 24 7/Gaby request.sql",
				"/C/Users/elia_harmouche/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.Outlook/X5J9Q58V/FACTORING.txt",
				"/C/Users/elia_harmouche/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.Outlook/X5J9Q58V/RESERVATION.txt",
				"/C/Users/elia_harmouche/AppData/Local/Temp/Rar$DIa0.461/LICENSE.txt",
				"/X/Documents/Mohamed/Tuition Fees/data.txt",
				"/X/Documents/Elia/sql/Desktop/Profitability/Prof cards.sql",
				"/C/Users/elia_harmouche/AppData/Local/Temp/dtemp-aebf728173041659-20.dop/LoadExampleData.java",
				"/C/Users/elia_harmouche/AppData/Local/Temp/dtemp-873f908351845902-20.dop/AddressFinder.java",
				"/C/Users/elia_harmouche/AppData/Local/Temp/dtemp-b59f668351873764-20.dop/Address.java",
				"/C/Users/elia_harmouche/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.Outlook/X5J9Q58V/OFFICERS_LIST.txt",
				"/C/Users/elia_harmouche/AppData/Local/Temp/dtemp-8a5fd68174987444-20.dop/AddressFinder.java",
				"/X/java/NetBeans8/webBanking3/sql/SelectCust.sql",
				"/C/javaApp/PF2/target/application.home_IS_UNDEFINED/logs/application.log",
				"/C/logs/application.log",
				"/C/Users/elia_harmouche/Desktop/mail2.html",
				"/C/Users/elia_harmouche/AppData/Roaming/NetBeans/8.2/var/log/messages.log",
				"/X/Doc/ICBS password after import.txt",
				"/X/Documents/Elia/sql/Desktop/ebanking CSC cards/classes/org/tempuri/package-info.java",
				"/X/Documents/Elia/sql/Desktop/ebanking CSC cards/classes/org/tempuri/UpdateCustomerIBANResponse.java",
				"/X/Documents/Elia/sql/Desktop/ebanking CSC cards/classes/org/tempuri/UpdateCustomerDetailsResponse.java",
				"/X/Documents/Elia/sql/Desktop/ebanking CSC cards/classes/org/tempuri/ResponseHeader.java",
				"/X/Documents/Elia/sql/Desktop/ebanking CSC cards/classes/org/tempuri/ResponseStatus.java",
				"/X/Documents/Elia/sql/Desktop/ebanking CSC cards/classes/org/tempuri/CSCIntegration.java",
				"/X/Documents/Elia/sql/Desktop/ebanking CSC cards/classes/org/tempuri/BaseResponse.java",
				"/X/Documents/Elia/sql/Desktop/ebanking CSC cards/classes/org/tempuri/ArrayOfCardActivity.java",
				"/X/Documents/Elia/sql/Desktop/ebanking CSC cards/classes/org/tempuri/CSCIntegrationSoap.java",
				"/X/Documents/Elia/sql/Desktop/ebanking CSC cards/classes/org/tempuri/ResponseCustomerIBANs.java",
				"/X/Documents/Elia/sql/Desktop/ebanking CSC cards/classes/org/tempuri/ResponseCustomerDetails.java",
				"/C/Users/elia_harmouche/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.Outlook/X5J9Q58V/TuitionsFees_31-MAR-18.txt",
				"/C/Users/elia_harmouche/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.Outlook/X5J9Q58V/CreditBank.txt",
				"/C/Users/elia_harmouche/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.Outlook/X5J9Q58V/CB_Redemption_20180225.txt",
				"/C/Users/elia_harmouche/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.Outlook/X5J9Q58V/New Tables.txt",
				"/C/Users/elia_harmouche/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.Outlook/X5J9Q58V/count tables.txt",
				"/C/Users/elia_harmouche/AppData/Local/Temp/Rar$DIa0.968/3.CRB_PACK_ILO1.SQL",
				"/X/Documents/Elia/sql/Desktop/DV_ILO_BILL_CAPITAL.sql",
				"/C/Users/elia_harmouche/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.Outlook/X5J9Q58V/loans error sql.sql",
				"/X/Documents/Elia/sql/Desktop/Contract printing/Danielle contracts automation.txt",
				"/X/Documents/Elia/sql/Desktop/LC_LG/Jeanette LC Import Report BDL.sql",
				"/C/Users/elia_harmouche/AppData/Local/Temp/Rar$DIa0.211/3-Procedures.SQL",
				"/C/Users/elia_harmouche/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.Outlook/X5J9Q58V/ILOP PRODUCT.sql",
				"/C/Users/elia_harmouche/AppData/Local/Temp/Rar$DIa0.535/1-UpdTbl.SQL",
				"/C/Users/elia_harmouche/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.Outlook/X5J9Q58V/ILOP PRODUCT (3).sql",
				"/C/tmp/export.sql",
				"/X/Doc/11g DB pasword expiry.txt",
				"/C/Users/elia_harmouche/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.Outlook/X5J9Q58V/DV_TUITIONS_FEES_ACNTS.sql",
				"//dev-prd-app/Dev_9i/Documents/Mohamed/Tuition Fees/Scripts/Installation/CRB_AltTbl_18102017.sql",
				"//dev-prd-app/Dev_9i/Documents/Mohamed/Tuition Fees/Scripts/Installation/CRB_ScrnLbls_18102017.SQL",
				"//dev-prd-app/Dev_9i/Documents/Mohamed/Tuition Fees/Scripts/Installation/LOVScript.SQL",
				"//dev-prd-app/Dev_9i/Documents/Mohamed/Tuition Fees/Scripts/Installation/BBS_1385_1386.SQL",
				"//dev-prd-app/Dev_9i/Documents/Mohamed/Tuition Fees/Scripts/Installation/CRB_ScrnLbls_01122017.SQL",
				"//dev-prd-app/Dev_9i/Documents/Mohamed/Tuition Fees/Scripts/Installation/DV_TUITIONS_FEES_ACNTS.sql",
				"//dev-prd-app/Dev_9i/Documents/Mohamed/Tuition Fees/Scripts/Installation/BBSD_TUITIONS_FEES.sql",
				"/X/Documents/Elia/sql/Desktop/ATM Cash deposit/ATM Deposit Automation HD.sql",
				"/X/Documents/Elia/sql/Desktop/ATM Cash deposit/ATM CashDep new procedures.sql",
				"/C/Users/elia_harmouche/Desktop/install.sql",
				"/C/Users/elia_harmouche/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.Outlook/X5J9Q58V/scriptLC2.sql",
				"/C/Users/elia_harmouche/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.Outlook/X5J9Q58V/query for statistics sql.txt",
				"/C/Users/elia_harmouche/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.Outlook/X5J9Q58V/Query 2 - DB Server logs.txt",
				"/X/yared/MS Query_35299.txt",
				"/X/yared/MS Query_35380.txt",
				"/X/yared/MS Query_35597.txt",
				"/X/yared/MS Query_35463, 35571.txt",
				"/X/query.txt",
				"/X/query1.txt",
				"/C/Users/elia_harmouche/AppData/Local/Temp/baskerville - FarSide.txt",
				"/C/Users/elia_harmouche/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.Outlook/X5J9Q58V/AT6.txt",
				"/C/Users/elia_harmouche/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.Outlook/X5J9Q58V/2018-03-16 Online Banking fix.sql",
				"/C/Users/elia_harmouche/Desktop/UserDataService_GetUser.bak.sql",
				"/C/Users/elia_harmouche/Desktop/SecurityDataService_Login.bak.sql",
				"/X/Documents/Mohamed/Tuition Fees/Scripts/DV_TUITIONS_FEES_ACNTS.sql",
				"/X/Documents/Elia/sql/Desktop/Transfers online 24 7/ATM CashDep new procedures.sql",
				"/X/Documents/Elia/sql/Denise Fares 6sigma/6 Sigma 4 additional reports.sql",
				"/X/Documents/Elia/sql/Denise Fares 6sigma/6 sigma.txt",
				"/C/tmp/Reda Update purpose 30_6_2017.sql",
				"/C/Users/elia_harmouche/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.Outlook/X5J9Q58V/Logs Query.txt",
				"/C/tmp/Reda Update purpose 28_2_2018.sql",
				"/C/icbs/It_Dev/Dev01737c_2.txt",
				"/C/icbs/It_Dev/Dev01737c_3.txt",
				"/C/Users/elia_harmouche/Desktop/scriptLC2.sql",
				"/C/Users/elia_harmouche/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.Outlook/X5J9Q58V/Query 1 - DB logs.txt",
				"//192.168.0.238/backup$/1New ConTEXT document.txt",
				"/C/Users/elia_harmouche/Desktop/scriptLC.sql",
				"//192.168.12.22/javaApp/webBanking3/sql/SelectCust.sql",
				"/X/Documents/Elia/sql/Desktop/Nidal Collector work queue.sql"
			],
			"find":
			{
				"height": 40.8
			},
			"find_in_files":
			{
				"height": 0.0,
				"where_history":
				[
				]
			},
			"find_state":
			{
				"case_sensitive": false,
				"find_history":
				[
					"8181",
					"''",
					"DVS_DESC",
					"go",
					"5118415002173977",
					"192.168",
					"\"",
					"BBSD_BRCH_HLD_TRANSACTIONS",
					"bro",
					"||",
					"|",
					"'",
					"ILOD_TOPAY_CPT",
					"V_APR_RATE",
					"BBRD_ILO_TEMP_REP",
					"V_LOAN_TYPE",
					"ILOP_LOAN_TYPE",
					"COMM",
					"b_comm",
					"DV_RETAIL_SALESMEN",
					"DV_RETAIL_DEALERS",
					"SNU",
					"ILOM_INS_AMNT",
					"com",
					"Loan_status",
					",",
					"&",
					"\"",
					"v_date_du",
					"END LOOP;",
					"and goods_routing = ''T''",
					"and goods_routing = ''NL''",
					"to_char(:par_date_au,''dd/mm/yyyy'')",
					"''''",
					"'",
					"and lc_agent_name = 'BDL'",
					"and lc_resident = 'YES'",
					"''",
					"RCDC_DOC_AMOUNT",
					"  ",
					" ",
					"  ",
					"''",
					"_",
					"-",
					"\"",
					"'",
					"''",
					"'",
					"                 ",
					"  ",
					" ",
					"||'|'||",
					"''",
					"icbs.",
					"':BRCH_ACC'",
					"{1}",
					"DV_ONLINE_TRANS_RESER_REM",
					"127.0.0.1",
					"dv_taux_subv",
					"27852001",
					"V_Inside_working_hours_flg",
					"DV_ONLINE_TRANS_NET_POS_X",
					"V_Rate1",
					"2017",
					" ",
					"PROCEDURE",
					"P_CalculatedFrom",
					"gran",
					"grant",
					"20",
					"'",
					"''",
					"LC_EXPORT",
					"||",
					"''||",
					"''",
					"dv_hisps_cfd",
					"415",
					"RPD_BAL_4",
					"map untrusted to domain",
					"map untrusted to domain =",
					"V_CNAT_CODE_BEN",
					"V_FrmCacc",
					"8118",
					"''",
					"  ",
					"\\n",
					"/n",
					"8118",
					"ORG",
					"ORG_FACILITY",
					"Nbr_Unpaid_Bills",
					"fpd",
					"font",
					"'",
					"\"",
					" ",
					"V_Desc",
					"&",
					"\"",
					"payment",
					"payment report",
					"payment report is",
					"payment report is generated.",
					"OperationResultId",
					"TODAY_DATE",
					"V_TodayDate",
					"V_VAL_DATE_DR",
					"V_TodayDate",
					"V_Inside_working_hours_flg",
					"1507",
					"V_LocAmnt",
					"V_FrmAccAmnt",
					"P_InFrmAmntChr",
					"V_FrmAmnt",
					"P_InProcCode",
					"DV_ONLINE_TRANS_RESER",
					"V_FrmAccCurr",
					"V_FrmCurr",
					"in_BHLT_TIME_STAMP",
					"192.168",
					"er_",
					"OT_ER_GEN",
					"H_",
					"P_InTrsDateTime",
					"P_InProcCode",
					" "
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
					"'",
					"",
					"\\n",
					"/n",
					"'||'&'||'",
					"",
					"and goods_routing = ''L''",
					"and goods_routing = ''T''",
					"to_char(:par_date_au,'dd/mm/yyyy')",
					"'''",
					"''",
					"and goods_routing = 'NL'",
					"and goods_routing = 'NL'\n         ",
					"--and lc_resident = 'YES'\n         ",
					"--and lc_resident = 'YES'\n",
					"'",
					" ",
					"'",
					"-",
					"          ",
					"_",
					"",
					"''",
					"'",
					"''",
					" ",
					"_",
					",",
					"'",
					"",
					":BRCH_ACC",
					"0.0.0.0",
					"",
					"''",
					"'",
					"",
					"'",
					" ",
					"''",
					"",
					"'||'&'||'",
					"",
					":H_",
					"",
					"V_Sign",
					"''",
					"'",
					",",
					"",
					"\"",
					">",
					" ",
					"\"\"",
					"",
					"\\n",
					"/n",
					"",
					";",
					"update",
					"_",
					"v_date_du",
					"v_date_au",
					",",
					"_",
					"FU.",
					",",
					"'",
					"XXXXXXXX",
					"",
					"''",
					",",
					"'",
					",",
					"'",
					"",
					"'",
					"'30/09/2016'",
					",user,'DEV01844',sysdate);",
					"'",
					",",
					"'",
					"",
					"c.cdld_clbt",
					"c.cdld_clsg",
					"c.cdld_cdlg",
					"",
					"c.cdld_clnt",
					"c.cdld_ecos",
					"c.CDLD_CURR",
					"'",
					",",
					"s_year_2",
					"s_month_2",
					"s_month_1",
					"s_year_1"
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"groups":
			[
				{
					"selected": 4,
					"sheets":
					[
						{
							"buffer": 0,
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 3916,
								"regions":
								{
								},
								"selection":
								[
									[
										1030,
										1030
									]
								],
								"settings":
								{
									"SL.13.region_keys":
									[
									],
									"SL.14.region_keys":
									[
									],
									"auto_name": "",
									"syntax": "Packages/SQL/SQL.sublime-syntax",
									"tab_size": 2,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 4,
							"type": "text"
						},
						{
							"buffer": 1,
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 15031,
								"regions":
								{
								},
								"selection":
								[
									[
										8729,
										8729
									]
								],
								"settings":
								{
									"auto_name": "",
									"syntax": "Packages/SQL/SQL.sublime-syntax",
									"tab_size": 2,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 3528.0,
								"zoom_level": 1.0
							},
							"stack_index": 3,
							"type": "text"
						},
						{
							"buffer": 2,
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 5112,
								"regions":
								{
								},
								"selection":
								[
									[
										4436,
										4916
									]
								],
								"settings":
								{
									"auto_name": "",
									"syntax": "Packages/SQL/SQL.sublime-syntax",
									"tab_size": 2,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 1008.0,
								"zoom_level": 1.0
							},
							"stack_index": 2,
							"type": "text"
						},
						{
							"buffer": 3,
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 63210,
								"regions":
								{
								},
								"selection":
								[
									[
										40255,
										27
									]
								],
								"settings":
								{
									"syntax": "Packages/Oracle PL SQL/Syntaxes/PL SQL (Oracle).tmLanguage",
									"tab_size": 2,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 24977.0,
								"zoom_level": 1.0
							},
							"stack_index": 1,
							"type": "text"
						},
						{
							"buffer": 4,
							"file": "/C/Users/Elia_harmouche/AppData/Local/Microsoft/Windows/INetCache/Content.Outlook/TZXRKF2W/anastasia sql.sql",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 1294,
								"regions":
								{
								},
								"selection":
								[
									[
										0,
										0
									]
								],
								"settings":
								{
									"syntax": "Packages/SQLPlus/Oracle(SQL-PL-SQLPlus).tmLanguage",
									"tab_size": 2,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"type": "text"
						},
						{
							"buffer": 5,
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 13,
								"regions":
								{
								},
								"selection":
								[
									[
										12,
										12
									]
								],
								"settings":
								{
									"SL.15.region_keys":
									[
									],
									"auto_name": "",
									"syntax": "Packages/Text/Plain text.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 5,
							"type": "text"
						},
						{
							"buffer": 6,
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 3947,
								"regions":
								{
								},
								"selection":
								[
									[
										385,
										385
									]
								],
								"settings":
								{
									"SL.16.region_keys":
									[
									],
									"SL.19.region_keys":
									[
									],
									"SL.20.region_keys":
									[
									],
									"auto_name": "",
									"syntax": "Packages/SQLPlus/Oracle(SQL-PL-SQLPlus).tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 8,
							"type": "text"
						},
						{
							"buffer": 7,
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 4361,
								"regions":
								{
								},
								"selection":
								[
									[
										3535,
										3535
									]
								],
								"settings":
								{
									"SL.17.region_keys":
									[
									],
									"SL.93.region_keys":
									[
									],
									"auto_name": "",
									"syntax": "Packages/SQL/SQL.sublime-syntax"
								},
								"translation.x": 0.0,
								"translation.y": 864.0,
								"zoom_level": 1.0
							},
							"stack_index": 9,
							"type": "text"
						},
						{
							"buffer": 8,
							"file": "/C/javaApp/webBanking3/webBanking3.log",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 13058,
								"regions":
								{
								},
								"selection":
								[
									[
										12852,
										12852
									]
								],
								"settings":
								{
									"SL.18.region_keys":
									[
									],
									"syntax": "Packages/Text/Plain text.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 1818.0,
								"zoom_level": 1.0
							},
							"stack_index": 6,
							"type": "text"
						},
						{
							"buffer": 9,
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 7488,
								"regions":
								{
								},
								"selection":
								[
									[
										2024,
										2024
									]
								],
								"settings":
								{
									"SL.19.region_keys":
									[
									],
									"SL.23.region_keys":
									[
									],
									"auto_name": "",
									"syntax": "Packages/Java/Java.sublime-syntax"
								},
								"translation.x": 0.0,
								"translation.y": 1836.0,
								"zoom_level": 1.0
							},
							"stack_index": 7,
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 27.0
			},
			"input":
			{
				"height": 48.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					]
				],
				"cols":
				[
					0.0,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"output.SublimeLinter":
			{
				"height": 0.0
			},
			"output.find_results":
			{
				"height": 0.0
			},
			"output.git":
			{
				"height": 95.0
			},
			"pinned_build_system": "",
			"position": "0,2,3,-32000,-32000,-1,-1,734,547,0,1283",
			"project": "",
			"replace":
			{
				"height": 50.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"selected_group": 0,
			"settings":
			{
			},
			"show_minimap": true,
			"show_open_files": true,
			"show_tabs": true,
			"side_bar_visible": false,
			"side_bar_width": 188.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 1,
			"workspace_name": ""
		}
	],
	"workspaces":
	{
		"recent_workspaces":
		[
		]
	}
}
